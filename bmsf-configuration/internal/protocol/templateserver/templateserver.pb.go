// Code generated by protoc-gen-go.
// source: templateserver.proto
// DO NOT EDIT!

/*
Package templateserver is a generated protocol buffer package.

It is generated from these files:
	templateserver.proto

It has these top-level messages:
	RenderReq
	RenderResp
	PreviewRenderingReq
	PreviewRenderingResp
	CreateConfigTemplateSetReq
	CreateConfigTemplateSetResp
	DeleteConfigTemplateSetReq
	DeleteConfigTemplateSetResp
	UpdateConfigTemplateSetReq
	UpdateConfigTemplateSetResp
	QueryConfigTemplateSetReq
	QueryConfigTemplateSetResp
	QueryConfigTemplateSetListReq
	QueryConfigTemplateSetListResp
	CreateConfigTemplateReq
	CreateConfigTemplateResp
	DeleteConfigTemplateReq
	DeleteConfigTemplateResp
	UpdateConfigTemplateReq
	UpdateConfigTemplateResp
	QueryConfigTemplateReq
	QueryConfigTemplateResp
	QueryConfigTemplateListReq
	QueryConfigTemplateListResp
	CreateTemplateVersionReq
	CreateTemplateVersionResp
	DeleteTemplateVersionReq
	DeleteTemplateVersionResp
	UpdateTemplateVersionReq
	UpdateTemplateVersionResp
	QueryTemplateVersionReq
	QueryTemplateVersionResp
	QueryTemplateVersionListReq
	QueryTemplateVersionListResp
	CreateConfigTemplateBindingReq
	CreateConfigTemplateBindingResp
	DeleteConfigTemplateBindingReq
	DeleteConfigTemplateBindingResp
	SyncConfigTemplateBindingReq
	SyncConfigTemplateBindingResp
	QueryConfigTemplateBindingReq
	QueryConfigTemplateBindingResp
	QueryConfigTemplateBindingListReq
	QueryConfigTemplateBindingListResp
	CreateVariableReq
	CreateVariableResp
	UpdateVariableReq
	UpdateVariableResp
	DeleteVariableReq
	DeleteVariableResp
	QueryVariableReq
	QueryVariableResp
	QueryVariableListReq
	QueryVariableListResp
*/
package templateserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bk-bscp/internal/protocol/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RenderReq struct {
	Seq      uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid      string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Appid    string `protobuf:"bytes,3,opt,name=appid" json:"appid,omitempty"`
	Commitid string `protobuf:"bytes,4,opt,name=commitid" json:"commitid,omitempty"`
	Operator string `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
}

func (m *RenderReq) Reset()                    { *m = RenderReq{} }
func (m *RenderReq) String() string            { return proto.CompactTextString(m) }
func (*RenderReq) ProtoMessage()               {}
func (*RenderReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RenderReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *RenderReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *RenderReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *RenderReq) GetCommitid() string {
	if m != nil {
		return m.Commitid
	}
	return ""
}

func (m *RenderReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type RenderResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *RenderResp) Reset()                    { *m = RenderResp{} }
func (m *RenderResp) String() string            { return proto.CompactTextString(m) }
func (*RenderResp) ProtoMessage()               {}
func (*RenderResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RenderResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *RenderResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *RenderResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type PreviewRenderingReq struct {
	Seq      uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid      string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Appid    string `protobuf:"bytes,3,opt,name=appid" json:"appid,omitempty"`
	Commitid string `protobuf:"bytes,4,opt,name=commitid" json:"commitid,omitempty"`
	Operator string `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
}

func (m *PreviewRenderingReq) Reset()                    { *m = PreviewRenderingReq{} }
func (m *PreviewRenderingReq) String() string            { return proto.CompactTextString(m) }
func (*PreviewRenderingReq) ProtoMessage()               {}
func (*PreviewRenderingReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PreviewRenderingReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *PreviewRenderingReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *PreviewRenderingReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *PreviewRenderingReq) GetCommitid() string {
	if m != nil {
		return m.Commitid
	}
	return ""
}

func (m *PreviewRenderingReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type PreviewRenderingResp struct {
	Seq      uint64            `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode  common.ErrCode    `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg   string            `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Cfgslist []*common.Configs `protobuf:"bytes,4,rep,name=cfgslist" json:"cfgslist,omitempty"`
}

func (m *PreviewRenderingResp) Reset()                    { *m = PreviewRenderingResp{} }
func (m *PreviewRenderingResp) String() string            { return proto.CompactTextString(m) }
func (*PreviewRenderingResp) ProtoMessage()               {}
func (*PreviewRenderingResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PreviewRenderingResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *PreviewRenderingResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *PreviewRenderingResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *PreviewRenderingResp) GetCfgslist() []*common.Configs {
	if m != nil {
		return m.Cfgslist
	}
	return nil
}

type CreateConfigTemplateSetReq struct {
	Seq     uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid     string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Memo    string `protobuf:"bytes,4,opt,name=memo" json:"memo,omitempty"`
	Fpath   string `protobuf:"bytes,5,opt,name=fpath" json:"fpath,omitempty"`
	Creator string `protobuf:"bytes,6,opt,name=creator" json:"creator,omitempty"`
}

func (m *CreateConfigTemplateSetReq) Reset()                    { *m = CreateConfigTemplateSetReq{} }
func (m *CreateConfigTemplateSetReq) String() string            { return proto.CompactTextString(m) }
func (*CreateConfigTemplateSetReq) ProtoMessage()               {}
func (*CreateConfigTemplateSetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateConfigTemplateSetReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateConfigTemplateSetReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *CreateConfigTemplateSetReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateConfigTemplateSetReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CreateConfigTemplateSetReq) GetFpath() string {
	if m != nil {
		return m.Fpath
	}
	return ""
}

func (m *CreateConfigTemplateSetReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type CreateConfigTemplateSetResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Setid   string         `protobuf:"bytes,4,opt,name=setid" json:"setid,omitempty"`
}

func (m *CreateConfigTemplateSetResp) Reset()                    { *m = CreateConfigTemplateSetResp{} }
func (m *CreateConfigTemplateSetResp) String() string            { return proto.CompactTextString(m) }
func (*CreateConfigTemplateSetResp) ProtoMessage()               {}
func (*CreateConfigTemplateSetResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateConfigTemplateSetResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateConfigTemplateSetResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *CreateConfigTemplateSetResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateConfigTemplateSetResp) GetSetid() string {
	if m != nil {
		return m.Setid
	}
	return ""
}

type DeleteConfigTemplateSetReq struct {
	Seq      uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid      string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Setid    string `protobuf:"bytes,3,opt,name=setid" json:"setid,omitempty"`
	Operator string `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
}

func (m *DeleteConfigTemplateSetReq) Reset()                    { *m = DeleteConfigTemplateSetReq{} }
func (m *DeleteConfigTemplateSetReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteConfigTemplateSetReq) ProtoMessage()               {}
func (*DeleteConfigTemplateSetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteConfigTemplateSetReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteConfigTemplateSetReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *DeleteConfigTemplateSetReq) GetSetid() string {
	if m != nil {
		return m.Setid
	}
	return ""
}

func (m *DeleteConfigTemplateSetReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type DeleteConfigTemplateSetResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteConfigTemplateSetResp) Reset()                    { *m = DeleteConfigTemplateSetResp{} }
func (m *DeleteConfigTemplateSetResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteConfigTemplateSetResp) ProtoMessage()               {}
func (*DeleteConfigTemplateSetResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteConfigTemplateSetResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteConfigTemplateSetResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *DeleteConfigTemplateSetResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type UpdateConfigTemplateSetReq struct {
	Seq      uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid      string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Setid    string `protobuf:"bytes,3,opt,name=setid" json:"setid,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Memo     string `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
	Operator string `protobuf:"bytes,6,opt,name=operator" json:"operator,omitempty"`
}

func (m *UpdateConfigTemplateSetReq) Reset()                    { *m = UpdateConfigTemplateSetReq{} }
func (m *UpdateConfigTemplateSetReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateConfigTemplateSetReq) ProtoMessage()               {}
func (*UpdateConfigTemplateSetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateConfigTemplateSetReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateConfigTemplateSetReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *UpdateConfigTemplateSetReq) GetSetid() string {
	if m != nil {
		return m.Setid
	}
	return ""
}

func (m *UpdateConfigTemplateSetReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateConfigTemplateSetReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *UpdateConfigTemplateSetReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type UpdateConfigTemplateSetResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *UpdateConfigTemplateSetResp) Reset()                    { *m = UpdateConfigTemplateSetResp{} }
func (m *UpdateConfigTemplateSetResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateConfigTemplateSetResp) ProtoMessage()               {}
func (*UpdateConfigTemplateSetResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateConfigTemplateSetResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateConfigTemplateSetResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *UpdateConfigTemplateSetResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type QueryConfigTemplateSetReq struct {
	Seq   uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid   string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Setid string `protobuf:"bytes,3,opt,name=setid" json:"setid,omitempty"`
}

func (m *QueryConfigTemplateSetReq) Reset()                    { *m = QueryConfigTemplateSetReq{} }
func (m *QueryConfigTemplateSetReq) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateSetReq) ProtoMessage()               {}
func (*QueryConfigTemplateSetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *QueryConfigTemplateSetReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateSetReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryConfigTemplateSetReq) GetSetid() string {
	if m != nil {
		return m.Setid
	}
	return ""
}

type QueryConfigTemplateSetResp struct {
	Seq         uint64                    `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode     common.ErrCode            `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg      string                    `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	TemplateSet *common.ConfigTemplateSet `protobuf:"bytes,4,opt,name=templateSet" json:"templateSet,omitempty"`
}

func (m *QueryConfigTemplateSetResp) Reset()                    { *m = QueryConfigTemplateSetResp{} }
func (m *QueryConfigTemplateSetResp) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateSetResp) ProtoMessage()               {}
func (*QueryConfigTemplateSetResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *QueryConfigTemplateSetResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateSetResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryConfigTemplateSetResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryConfigTemplateSetResp) GetTemplateSet() *common.ConfigTemplateSet {
	if m != nil {
		return m.TemplateSet
	}
	return nil
}

type QueryConfigTemplateSetListReq struct {
	Seq   uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid   string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Index int32  `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	Limit int32  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
}

func (m *QueryConfigTemplateSetListReq) Reset()                    { *m = QueryConfigTemplateSetListReq{} }
func (m *QueryConfigTemplateSetListReq) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateSetListReq) ProtoMessage()               {}
func (*QueryConfigTemplateSetListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *QueryConfigTemplateSetListReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateSetListReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryConfigTemplateSetListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *QueryConfigTemplateSetListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type QueryConfigTemplateSetListResp struct {
	Seq          uint64                      `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode      common.ErrCode              `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg       string                      `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	TemplateSets []*common.ConfigTemplateSet `protobuf:"bytes,4,rep,name=templateSets" json:"templateSets,omitempty"`
}

func (m *QueryConfigTemplateSetListResp) Reset()                    { *m = QueryConfigTemplateSetListResp{} }
func (m *QueryConfigTemplateSetListResp) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateSetListResp) ProtoMessage()               {}
func (*QueryConfigTemplateSetListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *QueryConfigTemplateSetListResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateSetListResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryConfigTemplateSetListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryConfigTemplateSetListResp) GetTemplateSets() []*common.ConfigTemplateSet {
	if m != nil {
		return m.TemplateSets
	}
	return nil
}

type CreateConfigTemplateReq struct {
	Seq          uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid          string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Setid        string `protobuf:"bytes,3,opt,name=setid" json:"setid,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Memo         string `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
	User         string `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
	Group        string `protobuf:"bytes,7,opt,name=group" json:"group,omitempty"`
	Permission   int32  `protobuf:"varint,8,opt,name=permission" json:"permission,omitempty"`
	FileEncoding string `protobuf:"bytes,9,opt,name=fileEncoding" json:"fileEncoding,omitempty"`
	EngineType   int32  `protobuf:"varint,10,opt,name=engineType" json:"engineType,omitempty"`
	Creator      string `protobuf:"bytes,11,opt,name=creator" json:"creator,omitempty"`
}

func (m *CreateConfigTemplateReq) Reset()                    { *m = CreateConfigTemplateReq{} }
func (m *CreateConfigTemplateReq) String() string            { return proto.CompactTextString(m) }
func (*CreateConfigTemplateReq) ProtoMessage()               {}
func (*CreateConfigTemplateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CreateConfigTemplateReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateConfigTemplateReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *CreateConfigTemplateReq) GetSetid() string {
	if m != nil {
		return m.Setid
	}
	return ""
}

func (m *CreateConfigTemplateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateConfigTemplateReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CreateConfigTemplateReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *CreateConfigTemplateReq) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *CreateConfigTemplateReq) GetPermission() int32 {
	if m != nil {
		return m.Permission
	}
	return 0
}

func (m *CreateConfigTemplateReq) GetFileEncoding() string {
	if m != nil {
		return m.FileEncoding
	}
	return ""
}

func (m *CreateConfigTemplateReq) GetEngineType() int32 {
	if m != nil {
		return m.EngineType
	}
	return 0
}

func (m *CreateConfigTemplateReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type CreateConfigTemplateResp struct {
	Seq        uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode    common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg     string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Templateid string         `protobuf:"bytes,4,opt,name=templateid" json:"templateid,omitempty"`
}

func (m *CreateConfigTemplateResp) Reset()                    { *m = CreateConfigTemplateResp{} }
func (m *CreateConfigTemplateResp) String() string            { return proto.CompactTextString(m) }
func (*CreateConfigTemplateResp) ProtoMessage()               {}
func (*CreateConfigTemplateResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CreateConfigTemplateResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateConfigTemplateResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *CreateConfigTemplateResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateConfigTemplateResp) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

type DeleteConfigTemplateReq struct {
	Seq        uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid        string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Operator   string `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
}

func (m *DeleteConfigTemplateReq) Reset()                    { *m = DeleteConfigTemplateReq{} }
func (m *DeleteConfigTemplateReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteConfigTemplateReq) ProtoMessage()               {}
func (*DeleteConfigTemplateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *DeleteConfigTemplateReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteConfigTemplateReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *DeleteConfigTemplateReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *DeleteConfigTemplateReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type DeleteConfigTemplateResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteConfigTemplateResp) Reset()                    { *m = DeleteConfigTemplateResp{} }
func (m *DeleteConfigTemplateResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteConfigTemplateResp) ProtoMessage()               {}
func (*DeleteConfigTemplateResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *DeleteConfigTemplateResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteConfigTemplateResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *DeleteConfigTemplateResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type UpdateConfigTemplateReq struct {
	Seq          uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid          string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid   string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Memo         string `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
	User         string `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
	Group        string `protobuf:"bytes,7,opt,name=group" json:"group,omitempty"`
	Permission   int32  `protobuf:"varint,8,opt,name=permission" json:"permission,omitempty"`
	FileEncoding string `protobuf:"bytes,9,opt,name=fileEncoding" json:"fileEncoding,omitempty"`
	Operator     string `protobuf:"bytes,10,opt,name=operator" json:"operator,omitempty"`
}

func (m *UpdateConfigTemplateReq) Reset()                    { *m = UpdateConfigTemplateReq{} }
func (m *UpdateConfigTemplateReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateConfigTemplateReq) ProtoMessage()               {}
func (*UpdateConfigTemplateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *UpdateConfigTemplateReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateConfigTemplateReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *UpdateConfigTemplateReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *UpdateConfigTemplateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateConfigTemplateReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *UpdateConfigTemplateReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *UpdateConfigTemplateReq) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *UpdateConfigTemplateReq) GetPermission() int32 {
	if m != nil {
		return m.Permission
	}
	return 0
}

func (m *UpdateConfigTemplateReq) GetFileEncoding() string {
	if m != nil {
		return m.FileEncoding
	}
	return ""
}

func (m *UpdateConfigTemplateReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type UpdateConfigTemplateResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *UpdateConfigTemplateResp) Reset()                    { *m = UpdateConfigTemplateResp{} }
func (m *UpdateConfigTemplateResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateConfigTemplateResp) ProtoMessage()               {}
func (*UpdateConfigTemplateResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UpdateConfigTemplateResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateConfigTemplateResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *UpdateConfigTemplateResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type QueryConfigTemplateReq struct {
	Seq        uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid        string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
}

func (m *QueryConfigTemplateReq) Reset()                    { *m = QueryConfigTemplateReq{} }
func (m *QueryConfigTemplateReq) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateReq) ProtoMessage()               {}
func (*QueryConfigTemplateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *QueryConfigTemplateReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryConfigTemplateReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

type QueryConfigTemplateResp struct {
	Seq            uint64                 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode        common.ErrCode         `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg         string                 `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	ConfigTemplate *common.ConfigTemplate `protobuf:"bytes,4,opt,name=configTemplate" json:"configTemplate,omitempty"`
}

func (m *QueryConfigTemplateResp) Reset()                    { *m = QueryConfigTemplateResp{} }
func (m *QueryConfigTemplateResp) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateResp) ProtoMessage()               {}
func (*QueryConfigTemplateResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *QueryConfigTemplateResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryConfigTemplateResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryConfigTemplateResp) GetConfigTemplate() *common.ConfigTemplate {
	if m != nil {
		return m.ConfigTemplate
	}
	return nil
}

type QueryConfigTemplateListReq struct {
	Seq   uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid   string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Setid string `protobuf:"bytes,3,opt,name=setid" json:"setid,omitempty"`
	Index int32  `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	Limit int32  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
}

func (m *QueryConfigTemplateListReq) Reset()                    { *m = QueryConfigTemplateListReq{} }
func (m *QueryConfigTemplateListReq) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateListReq) ProtoMessage()               {}
func (*QueryConfigTemplateListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *QueryConfigTemplateListReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateListReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryConfigTemplateListReq) GetSetid() string {
	if m != nil {
		return m.Setid
	}
	return ""
}

func (m *QueryConfigTemplateListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *QueryConfigTemplateListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type QueryConfigTemplateListResp struct {
	Seq             uint64                   `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode         common.ErrCode           `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg          string                   `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	ConfigTemplates []*common.ConfigTemplate `protobuf:"bytes,4,rep,name=configTemplates" json:"configTemplates,omitempty"`
}

func (m *QueryConfigTemplateListResp) Reset()                    { *m = QueryConfigTemplateListResp{} }
func (m *QueryConfigTemplateListResp) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateListResp) ProtoMessage()               {}
func (*QueryConfigTemplateListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *QueryConfigTemplateListResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateListResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryConfigTemplateListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryConfigTemplateListResp) GetConfigTemplates() []*common.ConfigTemplate {
	if m != nil {
		return m.ConfigTemplates
	}
	return nil
}

type CreateTemplateVersionReq struct {
	Seq         uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid         string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid  string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	VersionName string `protobuf:"bytes,4,opt,name=versionName" json:"versionName,omitempty"`
	Memo        string `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
	Creator     string `protobuf:"bytes,6,opt,name=creator" json:"creator,omitempty"`
	Content     string `protobuf:"bytes,7,opt,name=content" json:"content,omitempty"`
}

func (m *CreateTemplateVersionReq) Reset()                    { *m = CreateTemplateVersionReq{} }
func (m *CreateTemplateVersionReq) String() string            { return proto.CompactTextString(m) }
func (*CreateTemplateVersionReq) ProtoMessage()               {}
func (*CreateTemplateVersionReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateTemplateVersionReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateTemplateVersionReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *CreateTemplateVersionReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *CreateTemplateVersionReq) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *CreateTemplateVersionReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CreateTemplateVersionReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CreateTemplateVersionReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreateTemplateVersionResp struct {
	Seq       uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode   common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg    string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Versionid string         `protobuf:"bytes,4,opt,name=versionid" json:"versionid,omitempty"`
}

func (m *CreateTemplateVersionResp) Reset()                    { *m = CreateTemplateVersionResp{} }
func (m *CreateTemplateVersionResp) String() string            { return proto.CompactTextString(m) }
func (*CreateTemplateVersionResp) ProtoMessage()               {}
func (*CreateTemplateVersionResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CreateTemplateVersionResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateTemplateVersionResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *CreateTemplateVersionResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateTemplateVersionResp) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

type DeleteTemplateVersionReq struct {
	Seq       uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid       string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Versionid string `protobuf:"bytes,3,opt,name=versionid" json:"versionid,omitempty"`
	Operator  string `protobuf:"bytes,4,opt,name=operator" json:"operator,omitempty"`
}

func (m *DeleteTemplateVersionReq) Reset()                    { *m = DeleteTemplateVersionReq{} }
func (m *DeleteTemplateVersionReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteTemplateVersionReq) ProtoMessage()               {}
func (*DeleteTemplateVersionReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *DeleteTemplateVersionReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteTemplateVersionReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *DeleteTemplateVersionReq) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

func (m *DeleteTemplateVersionReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type DeleteTemplateVersionResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteTemplateVersionResp) Reset()                    { *m = DeleteTemplateVersionResp{} }
func (m *DeleteTemplateVersionResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteTemplateVersionResp) ProtoMessage()               {}
func (*DeleteTemplateVersionResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *DeleteTemplateVersionResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteTemplateVersionResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *DeleteTemplateVersionResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type UpdateTemplateVersionReq struct {
	Seq         uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid         string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Versionid   string `protobuf:"bytes,3,opt,name=versionid" json:"versionid,omitempty"`
	VersionName string `protobuf:"bytes,4,opt,name=versionName" json:"versionName,omitempty"`
	Memo        string `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
	Operator    string `protobuf:"bytes,6,opt,name=operator" json:"operator,omitempty"`
	Content     string `protobuf:"bytes,7,opt,name=content" json:"content,omitempty"`
}

func (m *UpdateTemplateVersionReq) Reset()                    { *m = UpdateTemplateVersionReq{} }
func (m *UpdateTemplateVersionReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateTemplateVersionReq) ProtoMessage()               {}
func (*UpdateTemplateVersionReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdateTemplateVersionReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateTemplateVersionReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *UpdateTemplateVersionReq) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

func (m *UpdateTemplateVersionReq) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *UpdateTemplateVersionReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *UpdateTemplateVersionReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *UpdateTemplateVersionReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type UpdateTemplateVersionResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *UpdateTemplateVersionResp) Reset()                    { *m = UpdateTemplateVersionResp{} }
func (m *UpdateTemplateVersionResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateTemplateVersionResp) ProtoMessage()               {}
func (*UpdateTemplateVersionResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *UpdateTemplateVersionResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateTemplateVersionResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *UpdateTemplateVersionResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type QueryTemplateVersionReq struct {
	Seq       uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid       string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Versionid string `protobuf:"bytes,3,opt,name=versionid" json:"versionid,omitempty"`
}

func (m *QueryTemplateVersionReq) Reset()                    { *m = QueryTemplateVersionReq{} }
func (m *QueryTemplateVersionReq) String() string            { return proto.CompactTextString(m) }
func (*QueryTemplateVersionReq) ProtoMessage()               {}
func (*QueryTemplateVersionReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *QueryTemplateVersionReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryTemplateVersionReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryTemplateVersionReq) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

type QueryTemplateVersionResp struct {
	Seq             uint64                  `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode         common.ErrCode          `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg          string                  `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	TemplateVersion *common.TemplateVersion `protobuf:"bytes,4,opt,name=templateVersion" json:"templateVersion,omitempty"`
}

func (m *QueryTemplateVersionResp) Reset()                    { *m = QueryTemplateVersionResp{} }
func (m *QueryTemplateVersionResp) String() string            { return proto.CompactTextString(m) }
func (*QueryTemplateVersionResp) ProtoMessage()               {}
func (*QueryTemplateVersionResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *QueryTemplateVersionResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryTemplateVersionResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryTemplateVersionResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryTemplateVersionResp) GetTemplateVersion() *common.TemplateVersion {
	if m != nil {
		return m.TemplateVersion
	}
	return nil
}

type QueryTemplateVersionListReq struct {
	Seq        uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid        string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Index      int32  `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	Limit      int32  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
}

func (m *QueryTemplateVersionListReq) Reset()                    { *m = QueryTemplateVersionListReq{} }
func (m *QueryTemplateVersionListReq) String() string            { return proto.CompactTextString(m) }
func (*QueryTemplateVersionListReq) ProtoMessage()               {}
func (*QueryTemplateVersionListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *QueryTemplateVersionListReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryTemplateVersionListReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryTemplateVersionListReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *QueryTemplateVersionListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *QueryTemplateVersionListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type QueryTemplateVersionListResp struct {
	Seq              uint64                    `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode          common.ErrCode            `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg           string                    `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	TemplateVersions []*common.TemplateVersion `protobuf:"bytes,4,rep,name=templateVersions" json:"templateVersions,omitempty"`
}

func (m *QueryTemplateVersionListResp) Reset()                    { *m = QueryTemplateVersionListResp{} }
func (m *QueryTemplateVersionListResp) String() string            { return proto.CompactTextString(m) }
func (*QueryTemplateVersionListResp) ProtoMessage()               {}
func (*QueryTemplateVersionListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *QueryTemplateVersionListResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryTemplateVersionListResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryTemplateVersionListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryTemplateVersionListResp) GetTemplateVersions() []*common.TemplateVersion {
	if m != nil {
		return m.TemplateVersions
	}
	return nil
}

type CreateConfigTemplateBindingReq struct {
	Seq           uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid           string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid    string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Appid         string `protobuf:"bytes,4,opt,name=appid" json:"appid,omitempty"`
	Versionid     string `protobuf:"bytes,5,opt,name=versionid" json:"versionid,omitempty"`
	BindingParams string `protobuf:"bytes,6,opt,name=bindingParams" json:"bindingParams,omitempty"`
	Creator       string `protobuf:"bytes,7,opt,name=creator" json:"creator,omitempty"`
}

func (m *CreateConfigTemplateBindingReq) Reset()                    { *m = CreateConfigTemplateBindingReq{} }
func (m *CreateConfigTemplateBindingReq) String() string            { return proto.CompactTextString(m) }
func (*CreateConfigTemplateBindingReq) ProtoMessage()               {}
func (*CreateConfigTemplateBindingReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *CreateConfigTemplateBindingReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateConfigTemplateBindingReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *CreateConfigTemplateBindingReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *CreateConfigTemplateBindingReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *CreateConfigTemplateBindingReq) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

func (m *CreateConfigTemplateBindingReq) GetBindingParams() string {
	if m != nil {
		return m.BindingParams
	}
	return ""
}

func (m *CreateConfigTemplateBindingReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type CreateConfigTemplateBindingResp struct {
	Seq      uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode  common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg   string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Cfgsetid string         `protobuf:"bytes,4,opt,name=cfgsetid" json:"cfgsetid,omitempty"`
	Commitid string         `protobuf:"bytes,5,opt,name=commitid" json:"commitid,omitempty"`
}

func (m *CreateConfigTemplateBindingResp) Reset()         { *m = CreateConfigTemplateBindingResp{} }
func (m *CreateConfigTemplateBindingResp) String() string { return proto.CompactTextString(m) }
func (*CreateConfigTemplateBindingResp) ProtoMessage()    {}
func (*CreateConfigTemplateBindingResp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35}
}

func (m *CreateConfigTemplateBindingResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateConfigTemplateBindingResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *CreateConfigTemplateBindingResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateConfigTemplateBindingResp) GetCfgsetid() string {
	if m != nil {
		return m.Cfgsetid
	}
	return ""
}

func (m *CreateConfigTemplateBindingResp) GetCommitid() string {
	if m != nil {
		return m.Commitid
	}
	return ""
}

type DeleteConfigTemplateBindingReq struct {
	Seq        uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid        string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Appid      string `protobuf:"bytes,4,opt,name=appid" json:"appid,omitempty"`
	Operator   string `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
}

func (m *DeleteConfigTemplateBindingReq) Reset()                    { *m = DeleteConfigTemplateBindingReq{} }
func (m *DeleteConfigTemplateBindingReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteConfigTemplateBindingReq) ProtoMessage()               {}
func (*DeleteConfigTemplateBindingReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *DeleteConfigTemplateBindingReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteConfigTemplateBindingReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *DeleteConfigTemplateBindingReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *DeleteConfigTemplateBindingReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *DeleteConfigTemplateBindingReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type DeleteConfigTemplateBindingResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteConfigTemplateBindingResp) Reset()         { *m = DeleteConfigTemplateBindingResp{} }
func (m *DeleteConfigTemplateBindingResp) String() string { return proto.CompactTextString(m) }
func (*DeleteConfigTemplateBindingResp) ProtoMessage()    {}
func (*DeleteConfigTemplateBindingResp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{37}
}

func (m *DeleteConfigTemplateBindingResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteConfigTemplateBindingResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *DeleteConfigTemplateBindingResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type SyncConfigTemplateBindingReq struct {
	Seq           uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid           string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid    string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Appid         string `protobuf:"bytes,4,opt,name=appid" json:"appid,omitempty"`
	Versionid     string `protobuf:"bytes,5,opt,name=versionid" json:"versionid,omitempty"`
	BindingParams string `protobuf:"bytes,6,opt,name=bindingParams" json:"bindingParams,omitempty"`
	Operator      string `protobuf:"bytes,7,opt,name=operator" json:"operator,omitempty"`
}

func (m *SyncConfigTemplateBindingReq) Reset()                    { *m = SyncConfigTemplateBindingReq{} }
func (m *SyncConfigTemplateBindingReq) String() string            { return proto.CompactTextString(m) }
func (*SyncConfigTemplateBindingReq) ProtoMessage()               {}
func (*SyncConfigTemplateBindingReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *SyncConfigTemplateBindingReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *SyncConfigTemplateBindingReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *SyncConfigTemplateBindingReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *SyncConfigTemplateBindingReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *SyncConfigTemplateBindingReq) GetVersionid() string {
	if m != nil {
		return m.Versionid
	}
	return ""
}

func (m *SyncConfigTemplateBindingReq) GetBindingParams() string {
	if m != nil {
		return m.BindingParams
	}
	return ""
}

func (m *SyncConfigTemplateBindingReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type SyncConfigTemplateBindingResp struct {
	Seq      uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode  common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg   string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Commitid string         `protobuf:"bytes,4,opt,name=commitid" json:"commitid,omitempty"`
}

func (m *SyncConfigTemplateBindingResp) Reset()                    { *m = SyncConfigTemplateBindingResp{} }
func (m *SyncConfigTemplateBindingResp) String() string            { return proto.CompactTextString(m) }
func (*SyncConfigTemplateBindingResp) ProtoMessage()               {}
func (*SyncConfigTemplateBindingResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *SyncConfigTemplateBindingResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *SyncConfigTemplateBindingResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *SyncConfigTemplateBindingResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *SyncConfigTemplateBindingResp) GetCommitid() string {
	if m != nil {
		return m.Commitid
	}
	return ""
}

type QueryConfigTemplateBindingReq struct {
	Seq        uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid        string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Appid      string `protobuf:"bytes,4,opt,name=appid" json:"appid,omitempty"`
}

func (m *QueryConfigTemplateBindingReq) Reset()                    { *m = QueryConfigTemplateBindingReq{} }
func (m *QueryConfigTemplateBindingReq) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateBindingReq) ProtoMessage()               {}
func (*QueryConfigTemplateBindingReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *QueryConfigTemplateBindingReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateBindingReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryConfigTemplateBindingReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *QueryConfigTemplateBindingReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

type QueryConfigTemplateBindingResp struct {
	Seq                   uint64                        `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode               common.ErrCode                `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg                string                        `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	ConfigTemplateBinding *common.ConfigTemplateBinding `protobuf:"bytes,4,opt,name=configTemplateBinding" json:"configTemplateBinding,omitempty"`
}

func (m *QueryConfigTemplateBindingResp) Reset()                    { *m = QueryConfigTemplateBindingResp{} }
func (m *QueryConfigTemplateBindingResp) String() string            { return proto.CompactTextString(m) }
func (*QueryConfigTemplateBindingResp) ProtoMessage()               {}
func (*QueryConfigTemplateBindingResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *QueryConfigTemplateBindingResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateBindingResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryConfigTemplateBindingResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryConfigTemplateBindingResp) GetConfigTemplateBinding() *common.ConfigTemplateBinding {
	if m != nil {
		return m.ConfigTemplateBinding
	}
	return nil
}

type QueryConfigTemplateBindingListReq struct {
	Seq        uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid        string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Templateid string `protobuf:"bytes,3,opt,name=templateid" json:"templateid,omitempty"`
	Appid      string `protobuf:"bytes,4,opt,name=appid" json:"appid,omitempty"`
	Index      int32  `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
	Limit      int32  `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
}

func (m *QueryConfigTemplateBindingListReq) Reset()         { *m = QueryConfigTemplateBindingListReq{} }
func (m *QueryConfigTemplateBindingListReq) String() string { return proto.CompactTextString(m) }
func (*QueryConfigTemplateBindingListReq) ProtoMessage()    {}
func (*QueryConfigTemplateBindingListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{42}
}

func (m *QueryConfigTemplateBindingListReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateBindingListReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryConfigTemplateBindingListReq) GetTemplateid() string {
	if m != nil {
		return m.Templateid
	}
	return ""
}

func (m *QueryConfigTemplateBindingListReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *QueryConfigTemplateBindingListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *QueryConfigTemplateBindingListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type QueryConfigTemplateBindingListResp struct {
	Seq                    uint64                          `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode                common.ErrCode                  `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg                 string                          `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	ConfigTemplateBindings []*common.ConfigTemplateBinding `protobuf:"bytes,4,rep,name=configTemplateBindings" json:"configTemplateBindings,omitempty"`
}

func (m *QueryConfigTemplateBindingListResp) Reset()         { *m = QueryConfigTemplateBindingListResp{} }
func (m *QueryConfigTemplateBindingListResp) String() string { return proto.CompactTextString(m) }
func (*QueryConfigTemplateBindingListResp) ProtoMessage()    {}
func (*QueryConfigTemplateBindingListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{43}
}

func (m *QueryConfigTemplateBindingListResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryConfigTemplateBindingListResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryConfigTemplateBindingListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryConfigTemplateBindingListResp) GetConfigTemplateBindings() []*common.ConfigTemplateBinding {
	if m != nil {
		return m.ConfigTemplateBindings
	}
	return nil
}

type CreateVariableReq struct {
	Seq           uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid           string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Cluster       string `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
	ClusterLabels string `protobuf:"bytes,4,opt,name=clusterLabels" json:"clusterLabels,omitempty"`
	Zone          string `protobuf:"bytes,5,opt,name=zone" json:"zone,omitempty"`
	Type          int32  `protobuf:"varint,6,opt,name=type" json:"type,omitempty"`
	Key           string `protobuf:"bytes,7,opt,name=key" json:"key,omitempty"`
	Value         string `protobuf:"bytes,8,opt,name=value" json:"value,omitempty"`
	Memo          string `protobuf:"bytes,9,opt,name=memo" json:"memo,omitempty"`
	Creator       string `protobuf:"bytes,10,opt,name=creator" json:"creator,omitempty"`
}

func (m *CreateVariableReq) Reset()                    { *m = CreateVariableReq{} }
func (m *CreateVariableReq) String() string            { return proto.CompactTextString(m) }
func (*CreateVariableReq) ProtoMessage()               {}
func (*CreateVariableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CreateVariableReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateVariableReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *CreateVariableReq) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *CreateVariableReq) GetClusterLabels() string {
	if m != nil {
		return m.ClusterLabels
	}
	return ""
}

func (m *CreateVariableReq) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *CreateVariableReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateVariableReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateVariableReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CreateVariableReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CreateVariableReq) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type CreateVariableResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Vid     string         `protobuf:"bytes,4,opt,name=vid" json:"vid,omitempty"`
}

func (m *CreateVariableResp) Reset()                    { *m = CreateVariableResp{} }
func (m *CreateVariableResp) String() string            { return proto.CompactTextString(m) }
func (*CreateVariableResp) ProtoMessage()               {}
func (*CreateVariableResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *CreateVariableResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateVariableResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *CreateVariableResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateVariableResp) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

type UpdateVariableReq struct {
	Seq      uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid      string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Vid      string `protobuf:"bytes,3,opt,name=vid" json:"vid,omitempty"`
	Type     int32  `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	Key      string `protobuf:"bytes,5,opt,name=key" json:"key,omitempty"`
	Value    string `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	Memo     string `protobuf:"bytes,7,opt,name=memo" json:"memo,omitempty"`
	Operator string `protobuf:"bytes,8,opt,name=operator" json:"operator,omitempty"`
}

func (m *UpdateVariableReq) Reset()                    { *m = UpdateVariableReq{} }
func (m *UpdateVariableReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateVariableReq) ProtoMessage()               {}
func (*UpdateVariableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *UpdateVariableReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateVariableReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *UpdateVariableReq) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *UpdateVariableReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UpdateVariableReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpdateVariableReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *UpdateVariableReq) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *UpdateVariableReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type UpdateVariableResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *UpdateVariableResp) Reset()                    { *m = UpdateVariableResp{} }
func (m *UpdateVariableResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateVariableResp) ProtoMessage()               {}
func (*UpdateVariableResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *UpdateVariableResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateVariableResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *UpdateVariableResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type DeleteVariableReq struct {
	Seq      uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid      string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Vid      string `protobuf:"bytes,3,opt,name=vid" json:"vid,omitempty"`
	Type     int32  `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	Operator string `protobuf:"bytes,5,opt,name=operator" json:"operator,omitempty"`
}

func (m *DeleteVariableReq) Reset()                    { *m = DeleteVariableReq{} }
func (m *DeleteVariableReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteVariableReq) ProtoMessage()               {}
func (*DeleteVariableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *DeleteVariableReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteVariableReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *DeleteVariableReq) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *DeleteVariableReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DeleteVariableReq) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type DeleteVariableResp struct {
	Seq     uint64         `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string         `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteVariableResp) Reset()                    { *m = DeleteVariableResp{} }
func (m *DeleteVariableResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteVariableResp) ProtoMessage()               {}
func (*DeleteVariableResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *DeleteVariableResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteVariableResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *DeleteVariableResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type QueryVariableReq struct {
	Seq  uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid  string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Vid  string `protobuf:"bytes,3,opt,name=vid" json:"vid,omitempty"`
	Type int32  `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
}

func (m *QueryVariableReq) Reset()                    { *m = QueryVariableReq{} }
func (m *QueryVariableReq) String() string            { return proto.CompactTextString(m) }
func (*QueryVariableReq) ProtoMessage()               {}
func (*QueryVariableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *QueryVariableReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryVariableReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryVariableReq) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *QueryVariableReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type QueryVariableResp struct {
	Seq     uint64           `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode   `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string           `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Var     *common.Variable `protobuf:"bytes,4,opt,name=var" json:"var,omitempty"`
}

func (m *QueryVariableResp) Reset()                    { *m = QueryVariableResp{} }
func (m *QueryVariableResp) String() string            { return proto.CompactTextString(m) }
func (*QueryVariableResp) ProtoMessage()               {}
func (*QueryVariableResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *QueryVariableResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryVariableResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryVariableResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryVariableResp) GetVar() *common.Variable {
	if m != nil {
		return m.Var
	}
	return nil
}

type QueryVariableListReq struct {
	Seq           uint64 `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Bid           string `protobuf:"bytes,2,opt,name=bid" json:"bid,omitempty"`
	Cluster       string `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
	ClusterLabels string `protobuf:"bytes,4,opt,name=clusterLabels" json:"clusterLabels,omitempty"`
	Zone          string `protobuf:"bytes,5,opt,name=zone" json:"zone,omitempty"`
	Type          int32  `protobuf:"varint,6,opt,name=type" json:"type,omitempty"`
	Index         int32  `protobuf:"varint,7,opt,name=index" json:"index,omitempty"`
	Limit         int32  `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
}

func (m *QueryVariableListReq) Reset()                    { *m = QueryVariableListReq{} }
func (m *QueryVariableListReq) String() string            { return proto.CompactTextString(m) }
func (*QueryVariableListReq) ProtoMessage()               {}
func (*QueryVariableListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *QueryVariableListReq) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryVariableListReq) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *QueryVariableListReq) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *QueryVariableListReq) GetClusterLabels() string {
	if m != nil {
		return m.ClusterLabels
	}
	return ""
}

func (m *QueryVariableListReq) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *QueryVariableListReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *QueryVariableListReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *QueryVariableListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type QueryVariableListResp struct {
	Seq     uint64             `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	ErrCode common.ErrCode     `protobuf:"varint,2,opt,name=errCode,enum=common.ErrCode" json:"errCode,omitempty"`
	ErrMsg  string             `protobuf:"bytes,3,opt,name=errMsg" json:"errMsg,omitempty"`
	Vars    []*common.Variable `protobuf:"bytes,4,rep,name=vars" json:"vars,omitempty"`
}

func (m *QueryVariableListResp) Reset()                    { *m = QueryVariableListResp{} }
func (m *QueryVariableListResp) String() string            { return proto.CompactTextString(m) }
func (*QueryVariableListResp) ProtoMessage()               {}
func (*QueryVariableListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *QueryVariableListResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *QueryVariableListResp) GetErrCode() common.ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return common.ErrCode_E_OK
}

func (m *QueryVariableListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *QueryVariableListResp) GetVars() []*common.Variable {
	if m != nil {
		return m.Vars
	}
	return nil
}

func init() {
	proto.RegisterType((*RenderReq)(nil), "templateserver.RenderReq")
	proto.RegisterType((*RenderResp)(nil), "templateserver.RenderResp")
	proto.RegisterType((*PreviewRenderingReq)(nil), "templateserver.PreviewRenderingReq")
	proto.RegisterType((*PreviewRenderingResp)(nil), "templateserver.PreviewRenderingResp")
	proto.RegisterType((*CreateConfigTemplateSetReq)(nil), "templateserver.CreateConfigTemplateSetReq")
	proto.RegisterType((*CreateConfigTemplateSetResp)(nil), "templateserver.CreateConfigTemplateSetResp")
	proto.RegisterType((*DeleteConfigTemplateSetReq)(nil), "templateserver.DeleteConfigTemplateSetReq")
	proto.RegisterType((*DeleteConfigTemplateSetResp)(nil), "templateserver.DeleteConfigTemplateSetResp")
	proto.RegisterType((*UpdateConfigTemplateSetReq)(nil), "templateserver.UpdateConfigTemplateSetReq")
	proto.RegisterType((*UpdateConfigTemplateSetResp)(nil), "templateserver.UpdateConfigTemplateSetResp")
	proto.RegisterType((*QueryConfigTemplateSetReq)(nil), "templateserver.QueryConfigTemplateSetReq")
	proto.RegisterType((*QueryConfigTemplateSetResp)(nil), "templateserver.QueryConfigTemplateSetResp")
	proto.RegisterType((*QueryConfigTemplateSetListReq)(nil), "templateserver.QueryConfigTemplateSetListReq")
	proto.RegisterType((*QueryConfigTemplateSetListResp)(nil), "templateserver.QueryConfigTemplateSetListResp")
	proto.RegisterType((*CreateConfigTemplateReq)(nil), "templateserver.CreateConfigTemplateReq")
	proto.RegisterType((*CreateConfigTemplateResp)(nil), "templateserver.CreateConfigTemplateResp")
	proto.RegisterType((*DeleteConfigTemplateReq)(nil), "templateserver.DeleteConfigTemplateReq")
	proto.RegisterType((*DeleteConfigTemplateResp)(nil), "templateserver.DeleteConfigTemplateResp")
	proto.RegisterType((*UpdateConfigTemplateReq)(nil), "templateserver.UpdateConfigTemplateReq")
	proto.RegisterType((*UpdateConfigTemplateResp)(nil), "templateserver.UpdateConfigTemplateResp")
	proto.RegisterType((*QueryConfigTemplateReq)(nil), "templateserver.QueryConfigTemplateReq")
	proto.RegisterType((*QueryConfigTemplateResp)(nil), "templateserver.QueryConfigTemplateResp")
	proto.RegisterType((*QueryConfigTemplateListReq)(nil), "templateserver.QueryConfigTemplateListReq")
	proto.RegisterType((*QueryConfigTemplateListResp)(nil), "templateserver.QueryConfigTemplateListResp")
	proto.RegisterType((*CreateTemplateVersionReq)(nil), "templateserver.CreateTemplateVersionReq")
	proto.RegisterType((*CreateTemplateVersionResp)(nil), "templateserver.CreateTemplateVersionResp")
	proto.RegisterType((*DeleteTemplateVersionReq)(nil), "templateserver.DeleteTemplateVersionReq")
	proto.RegisterType((*DeleteTemplateVersionResp)(nil), "templateserver.DeleteTemplateVersionResp")
	proto.RegisterType((*UpdateTemplateVersionReq)(nil), "templateserver.UpdateTemplateVersionReq")
	proto.RegisterType((*UpdateTemplateVersionResp)(nil), "templateserver.UpdateTemplateVersionResp")
	proto.RegisterType((*QueryTemplateVersionReq)(nil), "templateserver.QueryTemplateVersionReq")
	proto.RegisterType((*QueryTemplateVersionResp)(nil), "templateserver.QueryTemplateVersionResp")
	proto.RegisterType((*QueryTemplateVersionListReq)(nil), "templateserver.QueryTemplateVersionListReq")
	proto.RegisterType((*QueryTemplateVersionListResp)(nil), "templateserver.QueryTemplateVersionListResp")
	proto.RegisterType((*CreateConfigTemplateBindingReq)(nil), "templateserver.CreateConfigTemplateBindingReq")
	proto.RegisterType((*CreateConfigTemplateBindingResp)(nil), "templateserver.CreateConfigTemplateBindingResp")
	proto.RegisterType((*DeleteConfigTemplateBindingReq)(nil), "templateserver.DeleteConfigTemplateBindingReq")
	proto.RegisterType((*DeleteConfigTemplateBindingResp)(nil), "templateserver.DeleteConfigTemplateBindingResp")
	proto.RegisterType((*SyncConfigTemplateBindingReq)(nil), "templateserver.SyncConfigTemplateBindingReq")
	proto.RegisterType((*SyncConfigTemplateBindingResp)(nil), "templateserver.SyncConfigTemplateBindingResp")
	proto.RegisterType((*QueryConfigTemplateBindingReq)(nil), "templateserver.QueryConfigTemplateBindingReq")
	proto.RegisterType((*QueryConfigTemplateBindingResp)(nil), "templateserver.QueryConfigTemplateBindingResp")
	proto.RegisterType((*QueryConfigTemplateBindingListReq)(nil), "templateserver.QueryConfigTemplateBindingListReq")
	proto.RegisterType((*QueryConfigTemplateBindingListResp)(nil), "templateserver.QueryConfigTemplateBindingListResp")
	proto.RegisterType((*CreateVariableReq)(nil), "templateserver.CreateVariableReq")
	proto.RegisterType((*CreateVariableResp)(nil), "templateserver.CreateVariableResp")
	proto.RegisterType((*UpdateVariableReq)(nil), "templateserver.UpdateVariableReq")
	proto.RegisterType((*UpdateVariableResp)(nil), "templateserver.UpdateVariableResp")
	proto.RegisterType((*DeleteVariableReq)(nil), "templateserver.DeleteVariableReq")
	proto.RegisterType((*DeleteVariableResp)(nil), "templateserver.DeleteVariableResp")
	proto.RegisterType((*QueryVariableReq)(nil), "templateserver.QueryVariableReq")
	proto.RegisterType((*QueryVariableResp)(nil), "templateserver.QueryVariableResp")
	proto.RegisterType((*QueryVariableListReq)(nil), "templateserver.QueryVariableListReq")
	proto.RegisterType((*QueryVariableListResp)(nil), "templateserver.QueryVariableListResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Template service

type TemplateClient interface {
	Render(ctx context.Context, in *RenderReq, opts ...grpc.CallOption) (*RenderResp, error)
	PreviewRendering(ctx context.Context, in *PreviewRenderingReq, opts ...grpc.CallOption) (*PreviewRenderingResp, error)
	CreateConfigTemplateSet(ctx context.Context, in *CreateConfigTemplateSetReq, opts ...grpc.CallOption) (*CreateConfigTemplateSetResp, error)
	DeleteConfigTemplateSet(ctx context.Context, in *DeleteConfigTemplateSetReq, opts ...grpc.CallOption) (*DeleteConfigTemplateSetResp, error)
	UpdateConfigTemplateSet(ctx context.Context, in *UpdateConfigTemplateSetReq, opts ...grpc.CallOption) (*UpdateConfigTemplateSetResp, error)
	QueryConfigTemplateSet(ctx context.Context, in *QueryConfigTemplateSetReq, opts ...grpc.CallOption) (*QueryConfigTemplateSetResp, error)
	QueryConfigTemplateSetList(ctx context.Context, in *QueryConfigTemplateSetListReq, opts ...grpc.CallOption) (*QueryConfigTemplateSetListResp, error)
	CreateConfigTemplate(ctx context.Context, in *CreateConfigTemplateReq, opts ...grpc.CallOption) (*CreateConfigTemplateResp, error)
	DeleteConfigTemplate(ctx context.Context, in *DeleteConfigTemplateReq, opts ...grpc.CallOption) (*DeleteConfigTemplateResp, error)
	UpdateConfigTemplate(ctx context.Context, in *UpdateConfigTemplateReq, opts ...grpc.CallOption) (*UpdateConfigTemplateResp, error)
	QueryConfigTemplate(ctx context.Context, in *QueryConfigTemplateReq, opts ...grpc.CallOption) (*QueryConfigTemplateResp, error)
	QueryConfigTemplateList(ctx context.Context, in *QueryConfigTemplateListReq, opts ...grpc.CallOption) (*QueryConfigTemplateListResp, error)
	CreateTemplateVersion(ctx context.Context, in *CreateTemplateVersionReq, opts ...grpc.CallOption) (*CreateTemplateVersionResp, error)
	DeleteTemplateVersion(ctx context.Context, in *DeleteTemplateVersionReq, opts ...grpc.CallOption) (*DeleteTemplateVersionResp, error)
	UpdateTemplateVersion(ctx context.Context, in *UpdateTemplateVersionReq, opts ...grpc.CallOption) (*UpdateTemplateVersionResp, error)
	QueryTemplateVersion(ctx context.Context, in *QueryTemplateVersionReq, opts ...grpc.CallOption) (*QueryTemplateVersionResp, error)
	QueryTemplateVersionList(ctx context.Context, in *QueryTemplateVersionListReq, opts ...grpc.CallOption) (*QueryTemplateVersionListResp, error)
	CreateConfigTemplateBinding(ctx context.Context, in *CreateConfigTemplateBindingReq, opts ...grpc.CallOption) (*CreateConfigTemplateBindingResp, error)
	DeleteConfigTemplateBinding(ctx context.Context, in *DeleteConfigTemplateBindingReq, opts ...grpc.CallOption) (*DeleteConfigTemplateBindingResp, error)
	SyncConfigTemplateBinding(ctx context.Context, in *SyncConfigTemplateBindingReq, opts ...grpc.CallOption) (*SyncConfigTemplateBindingResp, error)
	QueryConfigTemplateBinding(ctx context.Context, in *QueryConfigTemplateBindingReq, opts ...grpc.CallOption) (*QueryConfigTemplateBindingResp, error)
	QueryConfigTemplateBindingList(ctx context.Context, in *QueryConfigTemplateBindingListReq, opts ...grpc.CallOption) (*QueryConfigTemplateBindingListResp, error)
	CreateVariable(ctx context.Context, in *CreateVariableReq, opts ...grpc.CallOption) (*CreateVariableResp, error)
	UpdateVariable(ctx context.Context, in *UpdateVariableReq, opts ...grpc.CallOption) (*UpdateVariableResp, error)
	DeleteVariable(ctx context.Context, in *DeleteVariableReq, opts ...grpc.CallOption) (*DeleteVariableResp, error)
	QueryVariable(ctx context.Context, in *QueryVariableReq, opts ...grpc.CallOption) (*QueryVariableResp, error)
	QueryVariableList(ctx context.Context, in *QueryVariableListReq, opts ...grpc.CallOption) (*QueryVariableListResp, error)
}

type templateClient struct {
	cc *grpc.ClientConn
}

func NewTemplateClient(cc *grpc.ClientConn) TemplateClient {
	return &templateClient{cc}
}

func (c *templateClient) Render(ctx context.Context, in *RenderReq, opts ...grpc.CallOption) (*RenderResp, error) {
	out := new(RenderResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/Render", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) PreviewRendering(ctx context.Context, in *PreviewRenderingReq, opts ...grpc.CallOption) (*PreviewRenderingResp, error) {
	out := new(PreviewRenderingResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/PreviewRendering", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) CreateConfigTemplateSet(ctx context.Context, in *CreateConfigTemplateSetReq, opts ...grpc.CallOption) (*CreateConfigTemplateSetResp, error) {
	out := new(CreateConfigTemplateSetResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/CreateConfigTemplateSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) DeleteConfigTemplateSet(ctx context.Context, in *DeleteConfigTemplateSetReq, opts ...grpc.CallOption) (*DeleteConfigTemplateSetResp, error) {
	out := new(DeleteConfigTemplateSetResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/DeleteConfigTemplateSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) UpdateConfigTemplateSet(ctx context.Context, in *UpdateConfigTemplateSetReq, opts ...grpc.CallOption) (*UpdateConfigTemplateSetResp, error) {
	out := new(UpdateConfigTemplateSetResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/UpdateConfigTemplateSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryConfigTemplateSet(ctx context.Context, in *QueryConfigTemplateSetReq, opts ...grpc.CallOption) (*QueryConfigTemplateSetResp, error) {
	out := new(QueryConfigTemplateSetResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryConfigTemplateSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryConfigTemplateSetList(ctx context.Context, in *QueryConfigTemplateSetListReq, opts ...grpc.CallOption) (*QueryConfigTemplateSetListResp, error) {
	out := new(QueryConfigTemplateSetListResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryConfigTemplateSetList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) CreateConfigTemplate(ctx context.Context, in *CreateConfigTemplateReq, opts ...grpc.CallOption) (*CreateConfigTemplateResp, error) {
	out := new(CreateConfigTemplateResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/CreateConfigTemplate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) DeleteConfigTemplate(ctx context.Context, in *DeleteConfigTemplateReq, opts ...grpc.CallOption) (*DeleteConfigTemplateResp, error) {
	out := new(DeleteConfigTemplateResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/DeleteConfigTemplate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) UpdateConfigTemplate(ctx context.Context, in *UpdateConfigTemplateReq, opts ...grpc.CallOption) (*UpdateConfigTemplateResp, error) {
	out := new(UpdateConfigTemplateResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/UpdateConfigTemplate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryConfigTemplate(ctx context.Context, in *QueryConfigTemplateReq, opts ...grpc.CallOption) (*QueryConfigTemplateResp, error) {
	out := new(QueryConfigTemplateResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryConfigTemplate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryConfigTemplateList(ctx context.Context, in *QueryConfigTemplateListReq, opts ...grpc.CallOption) (*QueryConfigTemplateListResp, error) {
	out := new(QueryConfigTemplateListResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryConfigTemplateList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) CreateTemplateVersion(ctx context.Context, in *CreateTemplateVersionReq, opts ...grpc.CallOption) (*CreateTemplateVersionResp, error) {
	out := new(CreateTemplateVersionResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/CreateTemplateVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) DeleteTemplateVersion(ctx context.Context, in *DeleteTemplateVersionReq, opts ...grpc.CallOption) (*DeleteTemplateVersionResp, error) {
	out := new(DeleteTemplateVersionResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/DeleteTemplateVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) UpdateTemplateVersion(ctx context.Context, in *UpdateTemplateVersionReq, opts ...grpc.CallOption) (*UpdateTemplateVersionResp, error) {
	out := new(UpdateTemplateVersionResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/UpdateTemplateVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryTemplateVersion(ctx context.Context, in *QueryTemplateVersionReq, opts ...grpc.CallOption) (*QueryTemplateVersionResp, error) {
	out := new(QueryTemplateVersionResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryTemplateVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryTemplateVersionList(ctx context.Context, in *QueryTemplateVersionListReq, opts ...grpc.CallOption) (*QueryTemplateVersionListResp, error) {
	out := new(QueryTemplateVersionListResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryTemplateVersionList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) CreateConfigTemplateBinding(ctx context.Context, in *CreateConfigTemplateBindingReq, opts ...grpc.CallOption) (*CreateConfigTemplateBindingResp, error) {
	out := new(CreateConfigTemplateBindingResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/CreateConfigTemplateBinding", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) DeleteConfigTemplateBinding(ctx context.Context, in *DeleteConfigTemplateBindingReq, opts ...grpc.CallOption) (*DeleteConfigTemplateBindingResp, error) {
	out := new(DeleteConfigTemplateBindingResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/DeleteConfigTemplateBinding", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) SyncConfigTemplateBinding(ctx context.Context, in *SyncConfigTemplateBindingReq, opts ...grpc.CallOption) (*SyncConfigTemplateBindingResp, error) {
	out := new(SyncConfigTemplateBindingResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/SyncConfigTemplateBinding", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryConfigTemplateBinding(ctx context.Context, in *QueryConfigTemplateBindingReq, opts ...grpc.CallOption) (*QueryConfigTemplateBindingResp, error) {
	out := new(QueryConfigTemplateBindingResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryConfigTemplateBinding", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryConfigTemplateBindingList(ctx context.Context, in *QueryConfigTemplateBindingListReq, opts ...grpc.CallOption) (*QueryConfigTemplateBindingListResp, error) {
	out := new(QueryConfigTemplateBindingListResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryConfigTemplateBindingList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) CreateVariable(ctx context.Context, in *CreateVariableReq, opts ...grpc.CallOption) (*CreateVariableResp, error) {
	out := new(CreateVariableResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/CreateVariable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) UpdateVariable(ctx context.Context, in *UpdateVariableReq, opts ...grpc.CallOption) (*UpdateVariableResp, error) {
	out := new(UpdateVariableResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/UpdateVariable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) DeleteVariable(ctx context.Context, in *DeleteVariableReq, opts ...grpc.CallOption) (*DeleteVariableResp, error) {
	out := new(DeleteVariableResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/DeleteVariable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryVariable(ctx context.Context, in *QueryVariableReq, opts ...grpc.CallOption) (*QueryVariableResp, error) {
	out := new(QueryVariableResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryVariable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateClient) QueryVariableList(ctx context.Context, in *QueryVariableListReq, opts ...grpc.CallOption) (*QueryVariableListResp, error) {
	out := new(QueryVariableListResp)
	err := grpc.Invoke(ctx, "/templateserver.Template/QueryVariableList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Template service

type TemplateServer interface {
	Render(context.Context, *RenderReq) (*RenderResp, error)
	PreviewRendering(context.Context, *PreviewRenderingReq) (*PreviewRenderingResp, error)
	CreateConfigTemplateSet(context.Context, *CreateConfigTemplateSetReq) (*CreateConfigTemplateSetResp, error)
	DeleteConfigTemplateSet(context.Context, *DeleteConfigTemplateSetReq) (*DeleteConfigTemplateSetResp, error)
	UpdateConfigTemplateSet(context.Context, *UpdateConfigTemplateSetReq) (*UpdateConfigTemplateSetResp, error)
	QueryConfigTemplateSet(context.Context, *QueryConfigTemplateSetReq) (*QueryConfigTemplateSetResp, error)
	QueryConfigTemplateSetList(context.Context, *QueryConfigTemplateSetListReq) (*QueryConfigTemplateSetListResp, error)
	CreateConfigTemplate(context.Context, *CreateConfigTemplateReq) (*CreateConfigTemplateResp, error)
	DeleteConfigTemplate(context.Context, *DeleteConfigTemplateReq) (*DeleteConfigTemplateResp, error)
	UpdateConfigTemplate(context.Context, *UpdateConfigTemplateReq) (*UpdateConfigTemplateResp, error)
	QueryConfigTemplate(context.Context, *QueryConfigTemplateReq) (*QueryConfigTemplateResp, error)
	QueryConfigTemplateList(context.Context, *QueryConfigTemplateListReq) (*QueryConfigTemplateListResp, error)
	CreateTemplateVersion(context.Context, *CreateTemplateVersionReq) (*CreateTemplateVersionResp, error)
	DeleteTemplateVersion(context.Context, *DeleteTemplateVersionReq) (*DeleteTemplateVersionResp, error)
	UpdateTemplateVersion(context.Context, *UpdateTemplateVersionReq) (*UpdateTemplateVersionResp, error)
	QueryTemplateVersion(context.Context, *QueryTemplateVersionReq) (*QueryTemplateVersionResp, error)
	QueryTemplateVersionList(context.Context, *QueryTemplateVersionListReq) (*QueryTemplateVersionListResp, error)
	CreateConfigTemplateBinding(context.Context, *CreateConfigTemplateBindingReq) (*CreateConfigTemplateBindingResp, error)
	DeleteConfigTemplateBinding(context.Context, *DeleteConfigTemplateBindingReq) (*DeleteConfigTemplateBindingResp, error)
	SyncConfigTemplateBinding(context.Context, *SyncConfigTemplateBindingReq) (*SyncConfigTemplateBindingResp, error)
	QueryConfigTemplateBinding(context.Context, *QueryConfigTemplateBindingReq) (*QueryConfigTemplateBindingResp, error)
	QueryConfigTemplateBindingList(context.Context, *QueryConfigTemplateBindingListReq) (*QueryConfigTemplateBindingListResp, error)
	CreateVariable(context.Context, *CreateVariableReq) (*CreateVariableResp, error)
	UpdateVariable(context.Context, *UpdateVariableReq) (*UpdateVariableResp, error)
	DeleteVariable(context.Context, *DeleteVariableReq) (*DeleteVariableResp, error)
	QueryVariable(context.Context, *QueryVariableReq) (*QueryVariableResp, error)
	QueryVariableList(context.Context, *QueryVariableListReq) (*QueryVariableListResp, error)
}

func RegisterTemplateServer(s *grpc.Server, srv TemplateServer) {
	s.RegisterService(&_Template_serviceDesc, srv)
}

func _Template_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).Render(ctx, req.(*RenderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_PreviewRendering_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreviewRenderingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).PreviewRendering(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/PreviewRendering",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).PreviewRendering(ctx, req.(*PreviewRenderingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_CreateConfigTemplateSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConfigTemplateSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).CreateConfigTemplateSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/CreateConfigTemplateSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).CreateConfigTemplateSet(ctx, req.(*CreateConfigTemplateSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_DeleteConfigTemplateSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConfigTemplateSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).DeleteConfigTemplateSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/DeleteConfigTemplateSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).DeleteConfigTemplateSet(ctx, req.(*DeleteConfigTemplateSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_UpdateConfigTemplateSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateConfigTemplateSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).UpdateConfigTemplateSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/UpdateConfigTemplateSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).UpdateConfigTemplateSet(ctx, req.(*UpdateConfigTemplateSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryConfigTemplateSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConfigTemplateSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryConfigTemplateSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryConfigTemplateSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryConfigTemplateSet(ctx, req.(*QueryConfigTemplateSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryConfigTemplateSetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConfigTemplateSetListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryConfigTemplateSetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryConfigTemplateSetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryConfigTemplateSetList(ctx, req.(*QueryConfigTemplateSetListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_CreateConfigTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConfigTemplateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).CreateConfigTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/CreateConfigTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).CreateConfigTemplate(ctx, req.(*CreateConfigTemplateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_DeleteConfigTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConfigTemplateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).DeleteConfigTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/DeleteConfigTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).DeleteConfigTemplate(ctx, req.(*DeleteConfigTemplateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_UpdateConfigTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateConfigTemplateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).UpdateConfigTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/UpdateConfigTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).UpdateConfigTemplate(ctx, req.(*UpdateConfigTemplateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryConfigTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConfigTemplateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryConfigTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryConfigTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryConfigTemplate(ctx, req.(*QueryConfigTemplateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryConfigTemplateList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConfigTemplateListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryConfigTemplateList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryConfigTemplateList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryConfigTemplateList(ctx, req.(*QueryConfigTemplateListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_CreateTemplateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTemplateVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).CreateTemplateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/CreateTemplateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).CreateTemplateVersion(ctx, req.(*CreateTemplateVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_DeleteTemplateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTemplateVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).DeleteTemplateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/DeleteTemplateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).DeleteTemplateVersion(ctx, req.(*DeleteTemplateVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_UpdateTemplateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTemplateVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).UpdateTemplateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/UpdateTemplateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).UpdateTemplateVersion(ctx, req.(*UpdateTemplateVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryTemplateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTemplateVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryTemplateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryTemplateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryTemplateVersion(ctx, req.(*QueryTemplateVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryTemplateVersionList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTemplateVersionListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryTemplateVersionList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryTemplateVersionList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryTemplateVersionList(ctx, req.(*QueryTemplateVersionListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_CreateConfigTemplateBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateConfigTemplateBindingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).CreateConfigTemplateBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/CreateConfigTemplateBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).CreateConfigTemplateBinding(ctx, req.(*CreateConfigTemplateBindingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_DeleteConfigTemplateBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConfigTemplateBindingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).DeleteConfigTemplateBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/DeleteConfigTemplateBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).DeleteConfigTemplateBinding(ctx, req.(*DeleteConfigTemplateBindingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_SyncConfigTemplateBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncConfigTemplateBindingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).SyncConfigTemplateBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/SyncConfigTemplateBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).SyncConfigTemplateBinding(ctx, req.(*SyncConfigTemplateBindingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryConfigTemplateBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConfigTemplateBindingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryConfigTemplateBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryConfigTemplateBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryConfigTemplateBinding(ctx, req.(*QueryConfigTemplateBindingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryConfigTemplateBindingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConfigTemplateBindingListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryConfigTemplateBindingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryConfigTemplateBindingList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryConfigTemplateBindingList(ctx, req.(*QueryConfigTemplateBindingListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_CreateVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).CreateVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/CreateVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).CreateVariable(ctx, req.(*CreateVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_UpdateVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).UpdateVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/UpdateVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).UpdateVariable(ctx, req.(*UpdateVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_DeleteVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).DeleteVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/DeleteVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).DeleteVariable(ctx, req.(*DeleteVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryVariable(ctx, req.(*QueryVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Template_QueryVariableList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryVariableListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateServer).QueryVariableList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templateserver.Template/QueryVariableList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateServer).QueryVariableList(ctx, req.(*QueryVariableListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Template_serviceDesc = grpc.ServiceDesc{
	ServiceName: "templateserver.Template",
	HandlerType: (*TemplateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _Template_Render_Handler,
		},
		{
			MethodName: "PreviewRendering",
			Handler:    _Template_PreviewRendering_Handler,
		},
		{
			MethodName: "CreateConfigTemplateSet",
			Handler:    _Template_CreateConfigTemplateSet_Handler,
		},
		{
			MethodName: "DeleteConfigTemplateSet",
			Handler:    _Template_DeleteConfigTemplateSet_Handler,
		},
		{
			MethodName: "UpdateConfigTemplateSet",
			Handler:    _Template_UpdateConfigTemplateSet_Handler,
		},
		{
			MethodName: "QueryConfigTemplateSet",
			Handler:    _Template_QueryConfigTemplateSet_Handler,
		},
		{
			MethodName: "QueryConfigTemplateSetList",
			Handler:    _Template_QueryConfigTemplateSetList_Handler,
		},
		{
			MethodName: "CreateConfigTemplate",
			Handler:    _Template_CreateConfigTemplate_Handler,
		},
		{
			MethodName: "DeleteConfigTemplate",
			Handler:    _Template_DeleteConfigTemplate_Handler,
		},
		{
			MethodName: "UpdateConfigTemplate",
			Handler:    _Template_UpdateConfigTemplate_Handler,
		},
		{
			MethodName: "QueryConfigTemplate",
			Handler:    _Template_QueryConfigTemplate_Handler,
		},
		{
			MethodName: "QueryConfigTemplateList",
			Handler:    _Template_QueryConfigTemplateList_Handler,
		},
		{
			MethodName: "CreateTemplateVersion",
			Handler:    _Template_CreateTemplateVersion_Handler,
		},
		{
			MethodName: "DeleteTemplateVersion",
			Handler:    _Template_DeleteTemplateVersion_Handler,
		},
		{
			MethodName: "UpdateTemplateVersion",
			Handler:    _Template_UpdateTemplateVersion_Handler,
		},
		{
			MethodName: "QueryTemplateVersion",
			Handler:    _Template_QueryTemplateVersion_Handler,
		},
		{
			MethodName: "QueryTemplateVersionList",
			Handler:    _Template_QueryTemplateVersionList_Handler,
		},
		{
			MethodName: "CreateConfigTemplateBinding",
			Handler:    _Template_CreateConfigTemplateBinding_Handler,
		},
		{
			MethodName: "DeleteConfigTemplateBinding",
			Handler:    _Template_DeleteConfigTemplateBinding_Handler,
		},
		{
			MethodName: "SyncConfigTemplateBinding",
			Handler:    _Template_SyncConfigTemplateBinding_Handler,
		},
		{
			MethodName: "QueryConfigTemplateBinding",
			Handler:    _Template_QueryConfigTemplateBinding_Handler,
		},
		{
			MethodName: "QueryConfigTemplateBindingList",
			Handler:    _Template_QueryConfigTemplateBindingList_Handler,
		},
		{
			MethodName: "CreateVariable",
			Handler:    _Template_CreateVariable_Handler,
		},
		{
			MethodName: "UpdateVariable",
			Handler:    _Template_UpdateVariable_Handler,
		},
		{
			MethodName: "DeleteVariable",
			Handler:    _Template_DeleteVariable_Handler,
		},
		{
			MethodName: "QueryVariable",
			Handler:    _Template_QueryVariable_Handler,
		},
		{
			MethodName: "QueryVariableList",
			Handler:    _Template_QueryVariableList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "templateserver.proto",
}

func init() { proto.RegisterFile("templateserver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1780 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x5a, 0xcf, 0x6f, 0xdc, 0xc4,
	0x17, 0x8f, 0xbb, 0xbb, 0xf9, 0xf1, 0xd2, 0xa6, 0xc9, 0x34, 0x4d, 0x1c, 0xb7, 0x4d, 0xd3, 0xf9,
	0xe6, 0xfb, 0x6d, 0xda, 0x7c, 0x93, 0x88, 0x70, 0x44, 0x20, 0x4a, 0xe8, 0xad, 0xa0, 0xb2, 0x69,
	0x2b, 0x21, 0x90, 0x90, 0x77, 0x77, 0x92, 0x5a, 0xdd, 0xb5, 0x5d, 0xdb, 0xd9, 0x76, 0x8b, 0x2a,
	0x21, 0x2e, 0x80, 0x04, 0x14, 0x71, 0x40, 0x88, 0x2b, 0x27, 0x2e, 0x3d, 0x20, 0x90, 0xe0, 0x3f,
	0x40, 0x1c, 0x10, 0xc7, 0xfe, 0x23, 0xdc, 0xd1, 0xcc, 0x78, 0x1c, 0xff, 0x98, 0xf1, 0x7a, 0x4b,
	0x26, 0xc0, 0x69, 0x3d, 0xe3, 0xe7, 0xf7, 0x79, 0xf3, 0x99, 0x37, 0xef, 0xcd, 0xbc, 0x59, 0x98,
	0x8f, 0x48, 0xcf, 0xef, 0xda, 0x11, 0x09, 0x49, 0xd0, 0x27, 0xc1, 0xa6, 0x1f, 0x78, 0x91, 0x87,
	0x66, 0xb2, 0xbd, 0xd6, 0x46, 0xeb, 0xde, 0x46, 0x2b, 0x6c, 0xfb, 0x5b, 0x8e, 0x1b, 0x91, 0xc0,
	0xb5, 0xbb, 0x5b, 0x4c, 0xae, 0xed, 0x75, 0xb7, 0xda, 0x5e, 0xaf, 0xe7, 0xb9, 0xf1, 0x0f, 0xff,
	0x1c, 0x3f, 0x86, 0xa9, 0x26, 0x71, 0x3b, 0x24, 0x68, 0x92, 0xfb, 0x68, 0x16, 0x6a, 0x21, 0xb9,
	0x6f, 0x1a, 0x2b, 0xc6, 0x5a, 0xbd, 0x49, 0x1f, 0x69, 0x4f, 0xcb, 0xe9, 0x98, 0x27, 0x56, 0x8c,
	0xb5, 0xa9, 0x26, 0x7d, 0x44, 0xf3, 0xd0, 0xb0, 0x7d, 0xdf, 0xe9, 0x98, 0x35, 0xd6, 0xc7, 0x1b,
	0xc8, 0x82, 0x49, 0xaa, 0xd6, 0x89, 0x9c, 0x8e, 0x59, 0x67, 0x2f, 0x92, 0x36, 0x7d, 0xe7, 0xf9,
	0x24, 0xb0, 0x23, 0x2f, 0x30, 0x1b, 0xfc, 0x9d, 0x68, 0x63, 0x1b, 0x40, 0xc0, 0x87, 0xbe, 0x04,
	0xff, 0x0a, 0x4c, 0x90, 0x20, 0xd8, 0xf1, 0x3a, 0x84, 0xd9, 0x30, 0xb3, 0x7d, 0x7a, 0x33, 0x36,
	0xff, 0x3a, 0xef, 0x6e, 0x8a, 0xf7, 0x68, 0x01, 0xc6, 0x49, 0x10, 0xbc, 0x11, 0xee, 0xc7, 0x96,
	0xc5, 0x2d, 0xfc, 0x91, 0x01, 0x67, 0x6e, 0x06, 0xa4, 0xef, 0x90, 0x07, 0x1c, 0xca, 0x71, 0xf7,
	0xff, 0x9e, 0xc1, 0x7e, 0x6d, 0xc0, 0x7c, 0xd1, 0x12, 0x4d, 0xe3, 0x46, 0xeb, 0x30, 0xd9, 0xde,
	0xdb, 0x0f, 0xbb, 0x4e, 0x18, 0x99, 0xf5, 0x95, 0xda, 0xda, 0xf4, 0xa1, 0x8e, 0x1d, 0xcf, 0xdd,
	0x73, 0xf6, 0xc3, 0x66, 0x22, 0x40, 0x4d, 0xb3, 0x76, 0x02, 0x62, 0x47, 0x84, 0xbf, 0xbb, 0x15,
	0x3b, 0xd5, 0x2e, 0x89, 0xaa, 0x72, 0x85, 0xa0, 0xee, 0xda, 0x3d, 0x12, 0x5b, 0xc1, 0x9e, 0x69,
	0x5f, 0x8f, 0xf4, 0xbc, 0x98, 0x25, 0xf6, 0x4c, 0x39, 0xdd, 0xf3, 0xed, 0xe8, 0x6e, 0x4c, 0x0f,
	0x6f, 0x20, 0x13, 0x26, 0xda, 0x14, 0xdf, 0x0b, 0xcc, 0x71, 0xd6, 0x2f, 0x9a, 0xf8, 0x63, 0x03,
	0xce, 0x29, 0x4d, 0xd3, 0x45, 0xde, 0x3c, 0x34, 0x42, 0x72, 0x38, 0xbf, 0xbc, 0x81, 0x03, 0xb0,
	0x5e, 0x27, 0x5d, 0xf2, 0x17, 0x48, 0x4a, 0xf4, 0xd6, 0x52, 0x7a, 0x33, 0x4e, 0x53, 0xcf, 0x39,
	0x4d, 0x00, 0xe7, 0x94, 0x98, 0xba, 0x96, 0xcc, 0x37, 0x06, 0x58, 0xb7, 0xfd, 0x8e, 0x7d, 0xe4,
	0x03, 0x15, 0x3e, 0x52, 0x97, 0xf8, 0x48, 0x23, 0xe5, 0x23, 0x69, 0x42, 0xc6, 0x8b, 0x84, 0x28,
	0x6d, 0xd3, 0x45, 0xc8, 0x6d, 0x58, 0x7a, 0xeb, 0x80, 0x04, 0x83, 0xa3, 0xa5, 0x03, 0x3f, 0x35,
	0xc0, 0x52, 0xe9, 0xd5, 0xe5, 0xd9, 0x2f, 0xc1, 0x74, 0x74, 0x88, 0xc3, 0x66, 0x62, 0x7a, 0x7b,
	0x29, 0x1b, 0x19, 0xd2, 0x86, 0xa4, 0xa5, 0xb1, 0x07, 0x17, 0xe4, 0xf6, 0xde, 0x70, 0xc2, 0x51,
	0xb8, 0x70, 0xdc, 0x0e, 0x79, 0xc8, 0x0c, 0x6b, 0x34, 0x79, 0x83, 0xf6, 0x76, 0x9d, 0x9e, 0xc3,
	0x2d, 0x6a, 0x34, 0x79, 0x03, 0xff, 0x60, 0xc0, 0x72, 0x19, 0xa2, 0x2e, 0x96, 0x5e, 0x86, 0x93,
	0xa9, 0x71, 0x87, 0x71, 0x00, 0x2d, 0xa1, 0x29, 0x23, 0x8e, 0xbf, 0x3d, 0x01, 0x8b, 0xb2, 0x98,
	0x75, 0x3c, 0xab, 0x07, 0x41, 0xfd, 0x20, 0x24, 0x62, 0xe5, 0xb0, 0x67, 0xaa, 0x71, 0x3f, 0xf0,
	0x0e, 0x7c, 0x73, 0x82, 0x6b, 0x64, 0x0d, 0xb4, 0x0c, 0xe0, 0x93, 0xa0, 0xe7, 0x84, 0xa1, 0xe3,
	0xb9, 0xe6, 0x24, 0x63, 0x3e, 0xd5, 0x83, 0x30, 0x9c, 0xdc, 0x73, 0xba, 0xe4, 0xba, 0xdb, 0xf6,
	0x3a, 0x8e, 0xbb, 0x6f, 0x4e, 0xb1, 0x8f, 0x33, 0x7d, 0x54, 0x07, 0x71, 0xf7, 0x1d, 0x97, 0xdc,
	0x1a, 0xf8, 0xc4, 0x04, 0xae, 0xe3, 0xb0, 0x27, 0x1d, 0xd9, 0xa7, 0xb3, 0x91, 0xfd, 0x89, 0x01,
	0xa6, 0x9c, 0x25, 0x5d, 0xd3, 0xba, 0x0c, 0x20, 0xe6, 0x29, 0x89, 0xed, 0xa9, 0x1e, 0x3c, 0x80,
	0x45, 0x59, 0xb0, 0xad, 0x3a, 0x6d, 0x59, 0xf5, 0xb5, 0xbc, 0xfa, 0xd2, 0x38, 0xef, 0x81, 0x29,
	0x87, 0xd6, 0x15, 0xd3, 0x9e, 0x9c, 0x80, 0x45, 0x59, 0x20, 0x3d, 0xaa, 0xc1, 0xfe, 0x33, 0xbd,
	0x35, 0x3d, 0x05, 0x50, 0x9c, 0x02, 0x39, 0x21, 0xba, 0xa6, 0xe0, 0x5d, 0x58, 0x90, 0x04, 0xb7,
	0x23, 0x9a, 0x00, 0x9a, 0x5d, 0x16, 0xa5, 0xea, 0x75, 0xad, 0xae, 0x57, 0x60, 0xa6, 0x9d, 0x81,
	0x8a, 0xb3, 0xcb, 0x82, 0x3c, 0x6c, 0x36, 0x73, 0xd2, 0xf8, 0x43, 0x79, 0x3a, 0x1c, 0x31, 0xb7,
	0x48, 0x02, 0x67, 0x92, 0x71, 0xea, 0xd2, 0x8c, 0xd3, 0xc8, 0x65, 0x9c, 0x73, 0x4a, 0x23, 0x74,
	0x31, 0xf7, 0x2a, 0x9c, 0xce, 0x72, 0x21, 0x32, 0x8e, 0x8a, 0xba, 0xbc, 0x38, 0xfe, 0x25, 0x89,
	0xa5, 0xa2, 0xef, 0x0e, 0x09, 0xe8, 0xaa, 0x38, 0xaa, 0xe5, 0xbc, 0x02, 0xd3, 0x7d, 0xae, 0xf1,
	0xcd, 0xc3, 0x55, 0x9d, 0xee, 0x92, 0x2e, 0x6e, 0xe5, 0xb6, 0x9e, 0xbd, 0xf1, 0xdc, 0x88, 0xb8,
	0x51, 0xbc, 0xc8, 0x45, 0x13, 0x7f, 0x6e, 0xc0, 0x92, 0x62, 0x28, 0xba, 0xf8, 0x3f, 0x0f, 0x53,
	0xf1, 0x48, 0x92, 0xb4, 0x70, 0xd8, 0x81, 0x1f, 0x8a, 0xd0, 0xfc, 0x9c, 0xd4, 0x66, 0xb4, 0xd7,
	0x72, 0xda, 0x4b, 0x93, 0x82, 0x0f, 0x4b, 0x0a, 0x64, 0x5d, 0x21, 0x89, 0xfa, 0x11, 0x0f, 0x82,
	0x5a, 0x06, 0xfb, 0x7c, 0x5e, 0x54, 0x72, 0x1c, 0x28, 0xf1, 0x23, 0x1f, 0x96, 0x14, 0x23, 0xd1,
	0x45, 0xde, 0x3b, 0x71, 0xc0, 0xd5, 0x41, 0x1d, 0xfe, 0xde, 0x00, 0x53, 0xae, 0x5d, 0xd7, 0xaa,
	0xb8, 0x06, 0xa7, 0xa3, 0x2c, 0x56, 0x1c, 0xd0, 0x17, 0x85, 0xaa, 0xbc, 0x29, 0x79, 0x79, 0xfc,
	0x99, 0x88, 0xa6, 0x39, 0xc9, 0x51, 0x62, 0xfa, 0xb0, 0xc8, 0x34, 0x4a, 0x74, 0xff, 0xc9, 0x80,
	0xf3, 0x6a, 0x7b, 0x74, 0x11, 0xb9, 0x03, 0xb3, 0x39, 0x62, 0x44, 0x7c, 0x57, 0x32, 0x59, 0xf8,
	0x00, 0x3f, 0x33, 0x60, 0x59, 0xb6, 0x5b, 0x7e, 0xcd, 0x71, 0x3b, 0x23, 0x94, 0xb4, 0x2a, 0xb0,
	0xc9, 0x4b, 0x5e, 0xf5, 0x74, 0xc9, 0x2b, 0xe3, 0x9a, 0x8d, 0xfc, 0xaa, 0x5e, 0x85, 0x53, 0x2d,
	0x6e, 0xc5, 0x4d, 0x3b, 0xb0, 0x7b, 0x61, 0xbc, 0x48, 0xb3, 0x9d, 0xe9, 0x5c, 0x30, 0x91, 0x3d,
	0x08, 0x3c, 0x35, 0xe0, 0x62, 0xe9, 0xd0, 0x74, 0x4d, 0x8c, 0xc5, 0x6b, 0x64, 0x24, 0x5d, 0xc9,
	0x8b, 0xdb, 0x99, 0x2a, 0x5f, 0x23, 0x5b, 0xe5, 0xc3, 0x5f, 0x19, 0xb0, 0x2c, 0xdb, 0xad, 0x1f,
	0xcb, 0x5c, 0x94, 0x95, 0x18, 0xfb, 0x70, 0xb1, 0xd4, 0x2e, 0x5d, 0x91, 0xef, 0x99, 0x01, 0xe7,
	0x77, 0x07, 0x6e, 0xfb, 0x5f, 0xea, 0x9a, 0x69, 0x4a, 0x27, 0x72, 0x94, 0x7e, 0x61, 0xc0, 0x85,
	0x92, 0xa1, 0xe9, 0x74, 0x4d, 0x45, 0x91, 0x19, 0x0f, 0xa4, 0x65, 0x98, 0xe3, 0x60, 0x1b, 0xff,
	0x2a, 0x2f, 0xc8, 0x68, 0xa7, 0x63, 0x17, 0xce, 0xb6, 0x65, 0x88, 0x71, 0x46, 0xba, 0x20, 0xdf,
	0x27, 0x0b, 0xb3, 0xe4, 0xdf, 0xe2, 0xef, 0x0c, 0xb8, 0xa4, 0x1e, 0xcc, 0x11, 0xe7, 0x28, 0x89,
	0xeb, 0x26, 0x99, 0xab, 0x21, 0xcd, 0x5c, 0xe3, 0xe9, 0xcc, 0xf5, 0xbb, 0x01, 0x78, 0x98, 0xad,
	0xba, 0xc8, 0xbf, 0x0d, 0x0b, 0x52, 0x02, 0x45, 0x16, 0x1b, 0xc2, 0xbe, 0xe2, 0x63, 0xfc, 0x87,
	0x01, 0x73, 0x3c, 0xec, 0xdf, 0xb1, 0x03, 0xc7, 0x6e, 0x75, 0x2b, 0x1f, 0x7d, 0x69, 0x2a, 0xe9,
	0x1e, 0x84, 0x11, 0x09, 0x62, 0x4b, 0x45, 0x93, 0xae, 0xf7, 0xf8, 0xf1, 0x86, 0xdd, 0x22, 0xdd,
	0x30, 0x26, 0x3c, 0xdb, 0x49, 0x37, 0x99, 0x8f, 0x3c, 0x97, 0x88, 0x4d, 0x26, 0x7d, 0xa6, 0x7d,
	0xd1, 0xc0, 0x27, 0x31, 0xeb, 0xec, 0x99, 0x22, 0xdf, 0x23, 0x83, 0x38, 0x24, 0xd0, 0x47, 0x3a,
	0x39, 0x7d, 0xbb, 0x7b, 0x40, 0x58, 0xf9, 0x61, 0xaa, 0xc9, 0x1b, 0xc9, 0xa6, 0x75, 0x4a, 0x7e,
	0xf4, 0x81, 0x6c, 0xba, 0x7b, 0x1f, 0x50, 0x7e, 0xd8, 0xba, 0x66, 0x6e, 0x16, 0x6a, 0xfd, 0xc4,
	0xeb, 0xe8, 0x23, 0xfe, 0xd1, 0x80, 0x39, 0xbe, 0x2d, 0x1e, 0x95, 0xf4, 0x58, 0x57, 0x2d, 0xd1,
	0x95, 0x50, 0x56, 0x2f, 0x52, 0xd6, 0x90, 0x50, 0x36, 0x2e, 0xa3, 0x6c, 0x42, 0xb1, 0xcf, 0x9f,
	0xcc, 0x85, 0x61, 0x07, 0x50, 0xde, 0x6c, 0x5d, 0xc9, 0x6c, 0x00, 0x73, 0x3c, 0x89, 0xea, 0x61,
	0xa8, 0x2c, 0x7f, 0x3b, 0x80, 0xf2, 0xd0, 0xfa, 0x8a, 0x4f, 0xb3, 0x2c, 0x9e, 0x68, 0x19, 0x24,
	0xfe, 0xd4, 0x80, 0xb9, 0x9c, 0x7a, 0x5d, 0x3e, 0x8e, 0xa1, 0xd6, 0xb7, 0x83, 0x38, 0x11, 0xcc,
	0x8a, 0xcf, 0x13, 0x5c, 0xfa, 0x12, 0xff, 0x66, 0xc0, 0x7c, 0xc6, 0x9c, 0x51, 0x82, 0xfb, 0x71,
	0x45, 0x9b, 0x24, 0x1d, 0x4c, 0x48, 0xd3, 0xc1, 0x64, 0x3a, 0x1d, 0x7c, 0x69, 0xc0, 0x59, 0xc9,
	0x80, 0x74, 0x71, 0xbc, 0x0a, 0xf5, 0xbe, 0x1d, 0x88, 0x78, 0x5f, 0x24, 0x99, 0xbd, 0xdd, 0xfe,
	0x79, 0x11, 0x26, 0x45, 0x94, 0x47, 0xd7, 0x60, 0x9c, 0xdf, 0x72, 0xa3, 0xa5, 0xcd, 0xdc, 0x3f,
	0x17, 0x92, 0x7f, 0x1c, 0x58, 0x96, 0xea, 0x55, 0xe8, 0xe3, 0x31, 0xf4, 0x1e, 0xcc, 0xe6, 0xef,
	0xcb, 0xd1, 0x7f, 0xf2, 0x5f, 0x48, 0xee, 0xf6, 0xad, 0xd5, 0xe1, 0x42, 0x0c, 0x20, 0x92, 0x5f,
	0xd3, 0xec, 0x92, 0x08, 0x5d, 0xcd, 0xab, 0x50, 0x5f, 0x8f, 0x5b, 0xeb, 0x95, 0x65, 0x05, 0xaa,
	0xe2, 0x4a, 0xb7, 0x88, 0xaa, 0xbe, 0x6f, 0x2e, 0xa2, 0x96, 0xdc, 0x13, 0x73, 0x54, 0xc5, 0xbd,
	0x69, 0x11, 0x55, 0x7d, 0xf9, 0x5b, 0x44, 0x2d, 0xb9, 0x8c, 0xc5, 0x63, 0xe8, 0xbe, 0xb4, 0xc4,
	0x4d, 0x41, 0xaf, 0xe4, 0x15, 0x29, 0x6f, 0x58, 0xad, 0xab, 0x55, 0x45, 0x19, 0xe4, 0x63, 0xd5,
	0xa5, 0x2a, 0x5d, 0x22, 0x68, 0xa3, 0x9a, 0xae, 0x38, 0x3e, 0x58, 0x9b, 0xa3, 0x88, 0x33, 0xf8,
	0x7b, 0x30, 0x2f, 0x9b, 0x7e, 0x74, 0xb9, 0x8a, 0x93, 0x50, 0xc8, 0xb5, 0x6a, 0x82, 0x02, 0x4c,
	0x36, 0xeb, 0x45, 0x30, 0xc5, 0xb5, 0x56, 0x11, 0x4c, 0x75, 0x09, 0xc5, 0xc1, 0x64, 0x93, 0x5d,
	0x04, 0x53, 0x5c, 0x2b, 0x15, 0xc1, 0x54, 0xd7, 0x2d, 0x78, 0x0c, 0xdd, 0x85, 0x33, 0x12, 0xaa,
	0xd1, 0xff, 0x2a, 0xcc, 0x07, 0x85, 0xba, 0x5c, 0x49, 0x4e, 0x2c, 0x0c, 0x45, 0xc1, 0x1f, 0x55,
	0x71, 0x3c, 0xe1, 0x29, 0xeb, 0x95, 0x65, 0x19, 0xaa, 0x0b, 0x67, 0xa5, 0x45, 0x6e, 0xa4, 0x98,
	0xfe, 0x62, 0x4d, 0xd1, 0xba, 0x52, 0x51, 0x52, 0xe0, 0x49, 0x4b, 0xc9, 0x48, 0xe1, 0x01, 0x55,
	0xf0, 0x94, 0xb5, 0x69, 0x8e, 0x27, 0xad, 0xbe, 0x22, 0x85, 0x13, 0x54, 0xc1, 0x53, 0x96, 0x73,
	0xb9, 0x73, 0xca, 0x0a, 0x7b, 0x48, 0xee, 0x08, 0x12, 0xb4, 0xb5, 0x6a, 0x82, 0x0c, 0xec, 0x81,
	0xbc, 0x14, 0xcb, 0x7c, 0x66, 0xbd, 0x8a, 0x1e, 0xe1, 0x34, 0xff, 0xaf, 0x2e, 0xcc, 0x80, 0x3f,
	0x50, 0xfc, 0x19, 0x2a, 0x3e, 0x53, 0xa1, 0xcd, 0x2a, 0xb1, 0xe3, 0xb0, 0x50, 0x60, 0x6d, 0x8d,
	0x24, 0x9f, 0x98, 0x50, 0x52, 0x63, 0x2a, 0x9a, 0x50, 0x5e, 0x28, 0x2b, 0x9a, 0x30, 0xa4, 0x80,
	0x85, 0xc7, 0xd0, 0x23, 0x58, 0x52, 0x56, 0x64, 0x50, 0x81, 0xd2, 0xb2, 0xba, 0x94, 0xb5, 0x31,
	0x82, 0x74, 0x49, 0x76, 0x11, 0xe0, 0x55, 0xb2, 0x4b, 0x0a, 0x7d, 0x73, 0x14, 0x71, 0x06, 0xff,
	0x49, 0x69, 0xfd, 0x85, 0x39, 0xe0, 0x0b, 0xd5, 0x95, 0x0a, 0x37, 0xdc, 0x1e, 0xf5, 0x13, 0x66,
	0xcb, 0xdb, 0x30, 0x93, 0x3d, 0xc7, 0xa2, 0x4b, 0x72, 0x77, 0x4a, 0x1d, 0x31, 0x2c, 0x3c, 0x4c,
	0x44, 0xa8, 0xce, 0x9e, 0xf6, 0x8a, 0xaa, 0x0b, 0x87, 0xd8, 0xa2, 0xea, 0xe2, 0x81, 0x91, 0xab,
	0xce, 0x1e, 0xb1, 0x8a, 0xaa, 0x0b, 0xa7, 0xbf, 0xa2, 0xea, 0xe2, 0x29, 0x0d, 0x8f, 0xa1, 0x3b,
	0x70, 0x2a, 0xb3, 0x27, 0x47, 0x2b, 0x52, 0x5e, 0xd3, 0x8a, 0x2f, 0x0d, 0x91, 0x60, 0x7a, 0x5b,
	0xb9, 0xb3, 0x14, 0x9b, 0xe6, 0xd5, 0xd2, 0x2f, 0xc5, 0xcc, 0xfe, 0xb7, 0x82, 0x14, 0xc5, 0x68,
	0x8d, 0xb3, 0xff, 0x03, 0xbf, 0xf8, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x44, 0x15, 0xba,
	0x66, 0x2c, 0x00, 0x00,
}
