syntax = "proto3";

import "github.com/Tencent/bk-bcs/bcs-network/api/protocol/common/common.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

package cloudnetservice;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "Cloud Netservice API Doc"
        version : "0.0.1"
    };

    schemes: HTTP
    consumes: "application/json"
    produces: "application/json"
};

service CloudNetservice {
    rpc AddSubnet(AddSubnetReq) returns (AddSubnetResp) {
        option (google.api.http) = {
            post: "/v1/subnet"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "创建云子网"
            summary: "创建云子网"
        };
    }
    rpc DeleteSubnet(DeleteSubnetReq) returns (DeleteSubnetResp) {
        option (google.api.http) = {
            delete: "/v1/subnet"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "删除云子网"
            summary: "删除云子网"
        };
    }
    rpc ListSubnet(ListSubnetReq) returns (ListSubnetResp) {
        option (google.api.http) = {
            get: "/v1/subnet/list"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "list云子网"
            summary: "list云子网"
        };
    }
    rpc ChangeSubnet(ChangeSubnetReq) returns (ChangeSubnetResp) {
        option (google.api.http) = {
            post: "/v1/subnet/op"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "更改Subnet"
            summary: "更改Subnet"
        };
    }
    rpc GetAvailableSubnet(GetAvailableSubnetReq) returns (GetAvailableSubnetResp) {
        option (google.api.http) = {
            get: "/v1/subnet/findavailable"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "获取可用子网"
            summary: "获取可用子网"
        };
    }

    rpc AllocateIP(AllocateIPReq) returns (AllocateIPResp) {
        option (google.api.http) = {
            post: "/v1/ip/allocate"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "分配ip地址"
            summary: "分配ip地址"
        };
    }
    rpc ReleaseIP(ReleaseIPReq) returns (ReleaseIPResp) {
        option (google.api.http) = {
            post: "/v1/ip/release"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "释放ip地址"
            summary: "释放ip地址"
        };
    }
    rpc AllocateFixedIP(AllocateFixedIPReq) returns (AllocateFixedIPResp) {
        option (google.api.http) = {
            post: "/v1/ip/fixed/allocate"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "分配固定ip地址"
            summary: "分配固定ip地址"
        };
    }
    rpc ReleaseFixedIP(ReleaseFixedIPReq) returns (ReleaseFixedIPResp) {
        option (google.api.http) = {
            post: "/v1/ip/fixed/release"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "释放固定ip地址"
            summary: "释放固定ip地址"
        };
    }
    rpc CleanFixedIP(CleanFixedIPReq) returns (CleanFixedIPResp) {
        option (google.api.http) = {
            post: "/v1/ip/fixed/clean"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "清理固定ip地址"
            summary: "清理固定ip地址"
        };
    }
    rpc CleanNode(CleanNodeReq) returns (CleanNodeResp) {
        option (google.api.http) = {
            post: "/v1/node/clean"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "清理节点上的所有ip地址"
            summary: "清理节点上所有ip地址"
        };
    }
    rpc ListIP(ListIPsReq) returns (ListIPsResp) {
        option (google.api.http) = {
            post: "/v1/ip/list"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            description: "查询ip列表"
            summary: "查询ip列表"
        };
    }
}

message AddSubnetReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "AddSubnetReq"
			description: "创建云子网请求"
			required: ["seq", "vpcID", "region", "subnetID", "subnetCidr"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "zone": "", "subnetID": "subnet-xxxxx", "subnetCidr": "127.0.0.0/24"}' }
    };
    
    uint64 seq        = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    string vpcID      = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "vpcID", description: "vpcID"}];
    string region     = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "region", description: "region"}];
    string zone       = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "zone", description: "zone"}];
    string subnetID   = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetID", description: "subnetID"}];
    string subnetCidr = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetCidr", description: "subnetCidr"}];
}

message AddSubnetResp {
    uint64             seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    common.ErrCode     errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errCode", description: "errCode"}];
    string             errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errMsg", description: "errMsg"}];
}

message DeleteSubnetReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "DeleteSubnetReq"
			description: "删除云子网请求"
			required: ["seq", "vpcID", "region", "subnetID"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "zone": "", "subnetID": "subnet-xxxxx" }' }
    };

    uint64 seq      = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    string vpcID    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "vpcID", description: "vpcID"}];
    string region   = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "region", description: "region"}];
    string zone     = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "zone", description: "zone"}];
    string subnetID = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetID", description: "subnetID"}];
}

message DeleteSubnetResp {
    uint64             seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    common.ErrCode     errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errCode", description: "errCode"}];
    string             errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errMsg", description: "errMsg"}];
}

message ListSubnetReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ListSubnetReq"
			description: "查看云子网列表"
			required: ["seq"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai" }' }
    };

    uint64 seq      = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    string vpcID    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "vpcID", description: "vpcID"}];
    string region   = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "region", description: "region"}];
    string subnetID = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetID", description: "subnetID"}];
}

message ListSubnetResp {
    uint64         seq                  = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq"}];
    common.ErrCode errCode              = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errCode", description: "errCode"}];
    string         errMsg               = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "errMsg", description: "errMsg"}];
    repeated common.CloudSubnet subnets = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnets", description: "subnets"}];
}

message ChangeSubnetReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ChangeSubnetReq"
			description: "更改子网状态"
			required: ["seq", "vpcID", "subnetID", "state"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "state": 0 }' }
    };

    uint64 seq      = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    string vpcID    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "vpcID", description: "vpcID" }];
    string subnetID = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "subnetID", description: "subnetID" }];
    uint32 state    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "state", description: "state" }];
}

message ChangeSubnetResp {
    uint64         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string         errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
}

message GetAvailableSubnetReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "GetAvailableSubnetReq"
			description: "更改子网状态"
			required: ["seq", "vpcID", "region", "zone"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "zone": "api-shanghai-4" }' }
    };

    uint64 seq    = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    string vpcID  = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "vpcID", description: "vpcID" }];
    string region = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "region", description: "region" }];
    string zone   = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "zone", description: "zone" }];
}

message GetAvailableSubnetResp {
    uint64             seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode     errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string             errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
    common.CloudSubnet subnet  = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "subnet", description: "subnet" }];
}

message AllocateIPReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "AllocateIPReq"
			description: "非指定方式分配IP"
			required: ["seq", "vpcID", "region", "subnetID", "cluster", "namespace", "podName", "workloadName", "host", "eniID", "containerID"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "subnetID": "subnet-xxxx", "cluster": "bcs-xxxxx", "namespace": "ns", "podName": "test-xxx-xxx", "worloadName": "test", "host": "127.0.0.1", "eniID": "eni-xxxx", "containerID": "SADFKLSDAJFLKSAJDFASLKDJFSAFDLJ" }' }
    };

    uint64 seq          = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq" }];
    string vpcID        = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "vpcID", description: "vpcID" }];
    string region       = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "region", description: "region"}];
    string subnetID     = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetID", description: "subnetID"}];
    string cluster      = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "cluster", description: "cluster"}];
    string namespace    = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "namespace", description: "namespace"}];
    string podName      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "podName", description: "podName"}];
    string workloadName = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "workloadName", description: "workloadName"}];
    string workloadKind = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "workloadKind", description: "workloadKind"}];
    string containerID  = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "containerID", description: "containerID"}];
    string host         = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "host", description: "host"}];
    string eniID        = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "eniID", description: "eniID"}];
}

message AllocateIPResp {
    uint64         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string         errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
    common.IPObject ip     = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "ip", description: "ip object" }];
}

message ReleaseIPReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ReleaseIPReq"
			description: "释放非指定方式分配的IP"
			required: ["seq", "vpcID", "region", "subnetID", "cluster", "namespace", "podName", "containerID", "eniID", "host", "addrees"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "subnetID": "subnet-xxxx", "cluster": "bcs-xxxxx", "namespace": "ns", "podName": "test-xxx-xxx", "containerID": "SADFKLSDAJFLKSAJDFASLKDJFSAFDLJ", "host": "127.0.0.1", "eniID": "eni-xxxx", "address": "127.0.0.2" }' }
    };

    uint64 seq         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq" }];
    string vpcID       = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "vpcID", description: "vpcID" }];
    string region      = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "region", description: "region" }];
    string subnetID    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetID", description: "subnetID" }];
    string cluster     = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "cluster", description: "cluster" }];
    string namespace   = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "namespace", description: "namespace" }];
    string podName     = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "podName", description: "podName" }];
    string containerID = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "containerID", description: "containerID" }];
    string eniID       = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "eniID", description: "eniID" }];
    string host        = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "host", description: "host" }];
    string address     = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "address", description: "address" }];
}

message ReleaseIPResp {
    uint64         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string         errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
}

message AllocateFixedIPReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "AllocateFixedIPReq"
			description: "分配固定IP"
			required: ["seq", "vpcID", "region", "subnetID", "cluster", "namespace", "podName", "workloadName", "host", "eniID", "containerID", "address"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "subnetID": "subnet-xxxx", "cluster": "bcs-xxxxx", "namespace": "ns", "podName": "test-xxx-xxx", "worloadName": "test", "host": "127.0.0.1", "eniID": "eni-xxxx", "containerID": "SADFKLSDAJFLKSAJDFASLKDJFSAFDLJ", "address": "127.0.0.2" }' }
    };

    uint64 seq          = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq" }];
    string vpcID        = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "vpcID", description: "vpcID" }];
    string region       = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "region", description: "region"}];
    string subnetID     = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetID", description: "subnetID"}];
    string cluster      = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "cluster", description: "cluster"}];
    string namespace    = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "namespace", description: "namespace"}];
    string podName      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "podName", description: "podName"}];
    string workloadName = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "workloadName", description: "workloadName"}];
    string workloadKind = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "workloadKind", description: "workloadKind"}];
    string containerID  = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "containerID", description: "containerID"}];
    string host         = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "host", description: "host"}];
    string eniID        = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "eniID", description: "eniID"}];
    string address      = 13 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "address", description: "address"}];
}

message AllocateFixedIPResp {
    uint64         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string         errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
    common.IPObject ip     = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "ip", description: "ip object" }];
}

message ReleaseFixedIPReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ReleaseFixedIPReq"
			description: "临时释放分配的固定IP"
			required: ["seq", "vpcID", "region", "subnetID", "cluster", "namespace", "podName", "containerID", "eniID", "host", "addrees"]
		}
        example: { value: '{ "seq": "1", "vpcID": "vpc-xxxxx", "region": "ap-shanghai", "subnetID": "subnet-xxxx", "cluster": "bcs-xxxxx", "namespace": "ns", "podName": "test-xxx-xxx", "containerID": "SADFKLSDAJFLKSAJDFASLKDJFSAFDLJ", "host": "127.0.0.1", "eniID": "eni-xxxx", "address": "127.0.0.2" }' }
    };

    uint64 seq         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "seq", description: "seq" }];
    string vpcID       = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "vpcID", description: "vpcID" }];
    string region      = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "region", description: "region" }];
    string subnetID    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "subnetID", description: "subnetID" }];
    string cluster     = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "cluster", description: "cluster" }];
    string namespace   = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "namespace", description: "namespace" }];
    string podName     = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "podName", description: "podName" }];
    string containerID = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "containerID", description: "containerID" }];
    string eniID       = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "eniID", description: "eniID" }];
    string host        = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "host", description: "host" }];
    string address     = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "address", description: "address" }];
}

message ReleaseFixedIPResp {
    uint64         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string         errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
}

message CleanFixedIPReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "CleanFixedIPReq"
			description: "清理分配的固定IP对象"
			required: ["seq", "region", "cluster", "namespace", "workloadName", "address"]
		}
        example: { value: '{ "seq": "1", "region": "ap-shanghai", "cluster": "bcs-xxxxx", "namespace": "ns", "workloadName": "pod-statefulset", "address": "127.0.0.1" }' }
    };

    uint64 seq          = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    string region       = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "region", description: "region" }];
    string cluster      = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "cluster", description: "cluster" }];
    string namespace    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "namespace", description: "namespace" }];
    string workloadName = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "workloadName", description: "workloadName" }];
    string workloadKind = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "workloadKind", description: "workloadKind" }];
    string address      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "address", description: "address" }];
}

message CleanFixedIPResp {
    uint64         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string         errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
}

message CleanNodeReq {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "CleanNodeReq"
            description: "清理一个node上所有的空闲IP地址"
            required: ["seq", "region", "cluster", "host"]
        }
        example: { value: '{ "seq": "1", "region": "ap-shanghai", "cluster": "bcs-xxxxx", "host": "127.0.0.1", "isForce": false }' }
    };

    uint64 seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    string region  = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "region", description: "region" }];
    string cluster = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "cluster", description: "cluster" }];
    string host    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "host", description: "host" }];
    bool   isForce = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "isForce", description: "是否强制删除所有ip，【注意】强制删除会将active状态的IP删除，导致容器网络不通" }];
}

message CleanNodeResp {
    uint64         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "seq", description: "seq" }];
    common.ErrCode errCode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errCode", description: "errCode" }];
    string         errMsg  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = { title: "errMsg", description: "errMsg" }];
}

message ListIPsReq {
    uint64 seq       = 1;
    int64  offset    = 2;
    int64  limit     = 3;
    string vpcID     = 4;
    string region    = 5;
    string subnetID  = 6;
    string cluster   = 7;
    string namespace = 8;
}

message ListIPsResp {
    uint64         seq           = 1;
    common.ErrCode errCode       = 2;
    string         errMsg        = 3;
    repeated common.IPObject ips = 4;
}